{"version":3,"sources":["App/_helpers/history.js","App/store/ducks/globalStatistics.js","App/components/CountrySort/CountrySort.jsx","App/components/CountrySearch/CountrySearch.jsx","App/components/CircularProgress/CircularProgress.jsx","App/components/CountryList/CountryList.jsx","App/components/SummaryBox/SummaryBox.jsx","App/components/SummaryBlock/SummaryBlock.jsx","App/components/WorldMapGraph/WorldMapGraph.jsx","App/components/InfectionsGraph/InfectionsGraph.jsx","App/components/RateGraph/RateGraph.jsx","App/components/DistributionGraph/DistributionGraph.jsx","App/components/InfectionRateBox/InfectionRateBox.jsx","App/components/InfectionRatesBlock/InfectionRatesBlock.jsx","App/components/Counter/Counter.jsx","App/components/Creator/Creator.jsx","App/screens/AppDashboard/AppDashboard.jsx","App/store/ducks/countryStatistics.js","App/screens/CountryDashboard/CountryDashboard.jsx","App/theme/lightTheme.js","App/theme/darkTheme.js","ThemeContextProvider.js","App/components/Header/Header.jsx","App/App.jsx","App/store/ducks/index.js","API/index.js","App/utils/compare.js","App/store/sagas/globalStatistics.js","App/store/sagas/countryStatistics.js","App/store/sagas/index.js","App/store/index.js","index.jsx"],"names":["history","createBrowserHistory","Types","INITIAL_STATE","summaryData","data","loading","error","timelineData","countryData","Creators","getGlobalSummaryStatistics","type","getGlobalSummaryStatisticsSuccess","payload","getGlobalSummaryStatisticsFailure","getGlobalCountryStatistics","getGlobalCountryStatisticsSuccess","getGlobalCountryStatisticsFailure","getGlobalTimelineStatistics","getGlobalTimelineStatisticsSuccess","getGlobalTimelineStatisticsFailure","subject","state","makeStyles","theme","useStyles","root","SuspenseLoading","style","display","justifyContent","alignItems","height","CircularProgress","disableShrink","color","countryBox","cursor","list","CountryList","classes","useTheme","map","val","idx","Box","padding","className","onClick","push","country","alignContent","width","src","id","process","toLowerCase","alt","paddingLeft","fontWeight","component","palette","info","main","todayCases","paddingBottom","cases","deaths","todayDeaths","paddingRight","Divider","Grid","item","xs","md","lg","Paper","position","fontSize","overflowY","divider","marginBottom","spacing","backgroundColor","success","warning","SummaryBox","title","count","totalCount","m","textAlign","clsx","SummaryBlock","recovered","critical","am4core","am4themes_animated","WorldMapGraph","useState","mapState","setMapState","chartMap","am4maps","geodata","am4geodata_worldLow","projection","Miller","polygonSeries","series","exclude","useGeodata","nonScalingStroke","strokeWidth","calculateVisualCenter","imageSeries","dataFields","value","imageTemplate","mapImages","template","nonScaling","circle","createChild","fillOpacity","tooltipText","fill","getColor","heatRules","target","property","min","max","dataField","adapter","add","latitude","polygon","getPolygonById","dataItem","dataContext","visualLatitude","longitude","visualLongitude","polygonTemplate","mapPolygons","background","default","stroke","paper","drawMap","p","top","right","Chip","size","label","InfectionsGraph","React","logMap","setLogMap","chart","am4charts","createSeriesLine","name","charAt","toUpperCase","slice","valueY","dateX","minBulletDistance","tooltip","pointerOrientation","cornerRadius","legendSettings","labelText","autoTextColor","chartType","numberFormatter","numberFormat","bigNumberPrefixes","number","suffix","dateAxis","xAxes","renderer","minGridDistance","valueAxis","yAxes","logarithmic","labels","legend","FormControlLabel","control","Switch","checked","onChange","event","inputProps","RateGraph","category","active","full","startAngle","endAngle","innerRadius","categoryAxis","grid","location","strokeOpacity","horizontalCenter","index","strictMinMax","series1","valueX","categoryY","clustered","columns","getFor","radarColumn","series2","DistributionGraph","calculateSum","array","total","i","_len","length","pieSeries","otherCases","disabled","ticks","slices","InfectionRateBox","Typography","InfectionRatesBlock","container","toFixed","paperRoot","TableCell","withStyles","borderBottom","MuiTableCell","Counter","initialTime","direction","Fragment","Table","align","TableRow","Days","Hours","Minutes","Seconds","marginTop","box","connect","globalStatistics","dispatch","bindActionCreators","GlobalStatisticsCreators","props","useEffect","Container","maxWidth","Creator","getCountrySummaryStatistics","getCountrySummaryStatisticsSuccess","getCountrySummaryStatisticsFailure","getCountryTimelineStatistics","getCountryTimelineStatisticsSuccess","getCountryTimelineStatisticsFailure","countryStatistics","CountryStatisticsCreators","useParams","createMuiTheme","primary","light","dark","contrastText","secondary","overrides","MuiDivider","responsiveFontSizes","createContext","Provider","Consumer","ThemeContextProvider","isDarkThemeActivated","onToggleDarkTheme","a","setState","getIsDarkThemeActivated","getAppTheme","darkTheme","lightTheme","this","children","appTheme","Component","flexGrow","appbar","Header","useContext","setTheme","AppBar","Toolbar","variant","typography","App","exact","path","render","combineReducers","api","axios","create","baseURL","compare","b","countryA","countryB","comparison","call","get","put","modifiedData","sort","forEach","element","countryCodes","casesPerOneMillion","deathsPerOneMillion","Object","keys","key","date","Date","recoveries","CountryStatisticsCeators","timeline","rootSaga","all","takeLatest","GlobalStatisticsTypes","CountryStatisticsTypes","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","run","sagas","ReactDOM","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.8d52e901.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","export const Types = {\n  GET_GLOBAL_SUMMARY_STATISTICS_REQUEST:\n    \"subject/GET_GLOBAL_SUMMARY_STATISTICS_REQUEST\",\n  GET_GLOBAL_SUMMARY_STATISTICS_SUCCESS:\n    \"subject/GET_GLOBAL_SUMMARY_STATISTICS_SUCCESS\",\n  GET_GLOBAL_SUMMARY_STATISTICS_ERROR:\n    \"subject/GET_GLOBAL_SUMMARY_STATISTICS_ERROR\",\n\n  GET_GLOBAL_COUNTRY_STATISTICS_REQUEST:\n    \"subject/GET_GLOBAL_COUNTRY_STATISTICS_REQUEST\",\n  GET_GLOBAL_COUNTRY_STATISTICS_SUCCESS:\n    \"subject/GET_GLOBAL_COUNTRY_STATISTICS_SUCCESS\",\n  GET_GLOBAL_COUNTRY_STATISTICS_ERROR:\n    \"subject/GET_GLOBAL_COUNTRY_STATISTICS_ERROR\",\n\n  GET_GLOBAL_TIMELINE_STATISTICS_REQUEST:\n    \"subject/GET_GLOBAL_TIMELINE_STATISTICS_REQUEST\",\n  GET_GLOBAL_TIMELINE_STATISTICS_SUCCESS:\n    \"subject/GET_GLOBAL_TIMELINE_STATISTICS_SUCCESS\",\n  GET_GLOBAL_TIMELINE_STATISTICS_ERROR:\n    \"subject/GET_GLOBAL_TIMELINE_STATISTICS_ERROR\",\n};\n\nconst INITIAL_STATE = {\n  summaryData: { data: null, loading: true, error: false },\n  timelineData: { data: null, loading: true, error: false },\n  countryData: { data: null, loading: true, error: false },\n};\n\nexport const Creators = {\n  getGlobalSummaryStatistics: () => ({\n    type: Types.GET_GLOBAL_SUMMARY_STATISTICS_REQUEST,\n  }),\n\n  getGlobalSummaryStatisticsSuccess: (data) => ({\n    type: Types.GET_GLOBAL_SUMMARY_STATISTICS_SUCCESS,\n    payload: { data },\n  }),\n\n  getGlobalSummaryStatisticsFailure: () => ({\n    type: Types.GET_GLOBAL_SUMMARY_STATISTICS_ERROR,\n  }),\n\n  getGlobalCountryStatistics: () => ({\n    type: Types.GET_GLOBAL_COUNTRY_STATISTICS_REQUEST,\n  }),\n\n  getGlobalCountryStatisticsSuccess: (data) => ({\n    type: Types.GET_GLOBAL_COUNTRY_STATISTICS_SUCCESS,\n    payload: { data },\n  }),\n\n  getGlobalCountryStatisticsFailure: () => ({\n    type: Types.GET_GLOBAL_COUNTRY_STATISTICS_ERROR,\n  }),\n\n  getGlobalTimelineStatistics: () => ({\n    type: Types.GET_GLOBAL_TIMELINE_STATISTICS_REQUEST,\n  }),\n\n  getGlobalTimelineStatisticsSuccess: (data) => ({\n    type: Types.GET_GLOBAL_TIMELINE_STATISTICS_SUCCESS,\n    payload: { data },\n  }),\n\n  getGlobalTimelineStatisticsFailure: () => ({\n    type: Types.GET_GLOBAL_TIMELINE_STATISTICS_ERROR,\n  }),\n};\n\nconst subject = (state = INITIAL_STATE, { type, payload }) => {\n  switch (type) {\n    case Types.GET_GLOBAL_SUMMARY_STATISTICS_REQUEST:\n      return {\n        ...INITIAL_STATE,\n      };\n\n    case Types.GET_GLOBAL_SUMMARY_STATISTICS_SUCCESS:\n      return {\n        ...state,\n        summaryData: { data: payload.data, loading: false, error: false },\n      };\n\n    case Types.GET_GLOBAL_SUMMARY_STATISTICS_ERROR:\n      return {\n        ...state,\n        summaryData: { ...state.summaryData.data, loading: false, error: true },\n      };\n\n    case Types.GET_GLOBAL_COUNTRY_STATISTICS_REQUEST:\n      return {\n        ...INITIAL_STATE,\n      };\n\n    case Types.GET_GLOBAL_COUNTRY_STATISTICS_SUCCESS:\n      return {\n        ...state,\n        countryData: { data: payload.data, loading: false, error: false },\n      };\n\n    case Types.GET_GLOBAL_COUNTRY_STATISTICS_ERROR:\n      return {\n        ...state,\n        countryData: { ...state.countryData.data, loading: false, error: true },\n      };\n\n    case Types.GET_GLOBAL_TIMELINE_STATISTICS_REQUEST:\n      return {\n        ...INITIAL_STATE,\n      };\n\n    case Types.GET_GLOBAL_TIMELINE_STATISTICS_SUCCESS:\n      return {\n        ...state,\n        timelineData: {\n          data: payload.data,\n          loading: false,\n          error: false,\n        },\n      };\n\n    case Types.GET_GLOBAL_TIMELINE_STATISTICS_ERROR:\n      return {\n        ...state,\n        timelineData: {\n          ...state.timelineData.data,\n          loading: false,\n          error: true,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default subject;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CountrySearch from \"../CountrySearch/CountrySearch\";\nimport CountrySort from \"../CountrySort/CountrySort\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function SummaryBlock({ stats }) {\n  const classes = useStyles();\n\n  return <></>;\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CountrySearch from \"../CountrySearch/CountrySearch\";\nimport CountrySort from \"../CountrySort/CountrySort\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function SummaryBlock({ stats }) {\n  const classes = useStyles();\n\n  return <></>;\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nexport default function SuspenseLoading() {\n  const classes = useStyles();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100%\",\n      }}\n    >\n      <CircularProgress disableShrink color=\"secondary\" />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Grid, Paper, Box, Divider } from \"@material-ui/core\";\nimport CountrySearch from \"../CountrySearch/CountrySearch\";\nimport CountrySort from \"../CountrySort/CountrySort\";\nimport CircularProgress from \"../CircularProgress/CircularProgress\";\nimport { history } from \"../../_helpers/history\";\n\nconst useStyles = makeStyles((theme) => ({\n  countryBox: {\n    \"&:hover\": {\n      // backgroundColor: \"rgb(7, 177, 77, 0.42)\",\n      cursor: \"pointer\",\n    },\n  },\n}));\n\nlet list = [];\n\nexport default function CountryList({ countryData }) {\n  const { data, loading, error } = countryData;\n  const classes = useStyles();\n  const theme = useTheme();\n  list =\n    data &&\n    data.map((val, idx) => (\n      <>\n        <Box\n          display=\"flex\"\n          padding={2}\n          className={classes.countryBox}\n          onClick={() => {\n            history.push(val.country);\n          }}\n        >\n          <Box display=\"flex\" alignContent=\"center\" alignItems=\"center\">\n            <img\n              style={{ width: \"40px\", height: \"40px\" }}\n              src={\n                val.id &&\n                `${process.env.PUBLIC_URL}/flags/${val.id.toLowerCase()}.svg`\n              }\n              alt=\"\"\n            />\n          </Box>\n          <Box width=\"100%\">\n            <Box display=\"flex\" justifyContent=\"space-between\" paddingLeft={2}>\n              <Box fontWeight=\"bold\">{val.country}</Box>\n              <Box>\n                <Box component=\"span\" color={theme.palette.info.main}>\n                  + {val.todayCases} Cases\n                </Box>\n              </Box>\n            </Box>\n            <Box\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              paddingLeft={2}\n              paddingBottom={1}\n            >\n              <Box>\n                <Box component=\"span\" color={theme.palette.info.main}>\n                  {val.cases} Cases\n                </Box>{\" \"}\n                &{\" \"}\n                <Box component=\"span\" color={theme.palette.error.main}>\n                  {val.deaths} Deaths\n                </Box>\n              </Box>\n              <Box>\n                <Box component=\"span\" color={theme.palette.error.main}>\n                  + {val.todayDeaths} Deaths\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n        <Box paddingLeft={2} paddingRight={2}>\n          <Divider />\n        </Box>\n      </>\n    ));\n\n  return (\n    <>\n      <Grid item xs={12} md={6} lg={4}>\n        <Paper style={{ height: \"100%\", position: \"relative\" }}>\n          {loading && !error && <CircularProgress />}\n          <Box fontSize=\"h6.fontSize\" padding={2}>\n            Affected countries\n          </Box>\n          {!loading && !error && (\n            <Box\n              style={{\n                overflowY: \"scroll\",\n                height: 500,\n              }}\n            >\n              {list}\n            </Box>\n          )}\n        </Paper>\n      </Grid>\n    </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, Divider, Typography, Box } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport CircularProgress from \"../CircularProgress/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  divider: {\n    marginBottom: theme.spacing(2),\n    height: theme.spacing(1),\n  },\n  info: { backgroundColor: theme.palette.info.main },\n  success: { backgroundColor: theme.palette.success.main },\n  warning: { backgroundColor: theme.palette.warning.main },\n  error: { backgroundColor: theme.palette.error.main },\n}));\n\nexport default function SummaryBox({\n  title,\n  count,\n  totalCount,\n  type,\n  loading,\n  error,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Paper>\n      <Box padding={2}>\n        {loading && !error && <CircularProgress />}\n        {/* {!loading && error && (\n          <Box\n            \n            fontSize=\"h6.fontSize\"\n            textAlign=\"center\"\n            m={1}\n          >\n            An error occured try later\n          </Box>\n        )} */}\n        {!loading && !error && (\n          <>\n            <Box fontSize=\"h6.fontSize\" m={1}>\n              {title}\n            </Box>\n            <Box fontSize=\"h6.fontSize\" textAlign=\"right\" m={1}>\n              {count}\n            </Box>\n            <Divider\n              className={clsx(\n                classes.divider,\n                type === \"info\" && classes.info,\n                type === \"success\" && classes.success,\n                type === \"warning\" && classes.warning,\n                type === \"error\" && classes.error\n              )}\n              color=\"info\"\n            />\n          </>\n        )}\n      </Box>\n    </Paper>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SummaryBox from \"../SummaryBox/SummaryBox\";\n\n// const useStyles = makeStyles((theme) => ({}));\n\nexport default function SummaryBlock({ summaryData }) {\n  const { data, loading, error } = summaryData;\n  return (\n    <>\n      <Grid item xs={12} md={6} lg={3}>\n        <SummaryBox\n          title=\"Infections\"\n          count={data && data.cases}\n          type=\"info\"\n          loading={loading}\n          error={error}\n          data={data}\n        />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <SummaryBox\n          title=\"Deaths\"\n          count={data && data.deaths}\n          loading={loading}\n          error={error}\n          data={data}\n          type=\"error\"\n        />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <SummaryBox\n          title=\"Recoveries\"\n          count={data && data.recovered}\n          type=\"success\"\n          loading={loading}\n          error={error}\n          data={data}\n        />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <SummaryBox\n          title=\"Critical\"\n          count={data && data.critical}\n          type=\"warning\"\n          loading={loading}\n          error={error}\n          data={data}\n        />\n      </Grid>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Grid, Paper, Box, Chip } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nimport countryCodes from \"../../utils/countryCodes.json\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\n\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nimport CircularProgress from \"../CircularProgress/CircularProgress\";\n\nam4core.useTheme(am4themes_animated);\n\nfunction WorldMapGraph({ countryData }) {\n  const [mapState, setMapState] = useState(\"cases\");\n  const theme = useTheme();\n  const { data, loading, error } = countryData;\n\n  am4core.ready(function () {\n    let chartMap = am4core.create(\"chartdiv\", am4maps.MapChart);\n    chartMap.geodata = am4geodata_worldLow;\n    chartMap.projection = new am4maps.projections.Miller();\n\n    function getColor(mapState) {\n      switch (mapState) {\n        case \"cases\":\n          return theme.palette.info.main;\n          break;\n        case \"recovered\":\n          return theme.palette.success.main;\n          break;\n        case \"deaths\":\n          return theme.palette.error.main;\n          break;\n        case \"critical\":\n          return theme.palette.warning.main;\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    function drawMap(mapState) {\n      let polygonSeries = chartMap.series.push(new am4maps.MapPolygonSeries());\n      polygonSeries.exclude = [\"AQ\"];\n      polygonSeries.useGeodata = true;\n      polygonSeries.nonScalingStroke = true;\n      polygonSeries.strokeWidth = 0.5;\n      polygonSeries.calculateVisualCenter = true;\n\n      let imageSeries = chartMap.series.push(new am4maps.MapImageSeries());\n      imageSeries.data = data;\n      imageSeries.dataFields.value = mapState;\n\n      let imageTemplate = imageSeries.mapImages.template;\n      imageTemplate.nonScaling = true;\n\n      let circle = imageTemplate.createChild(am4core.Circle);\n      circle.fillOpacity = 0.7;\n\n      circle.tooltipText = \"{name}: [bold]{value}[/]\";\n      circle.fill = getColor(mapState);\n\n      imageSeries.heatRules.push({\n        target: circle,\n        property: \"radius\",\n        min: 4,\n        max: 30,\n        dataField: \"value\",\n      });\n\n      imageTemplate.adapter.add(\"latitude\", function (latitude, target) {\n        let polygon = polygonSeries.getPolygonById(\n          target.dataItem.dataContext[\"id\"]\n        );\n        if (polygon) {\n          return polygon.visualLatitude;\n        }\n        return latitude;\n      });\n\n      imageTemplate.adapter.add(\"longitude\", function (longitude, target) {\n        let polygon = polygonSeries.getPolygonById(\n          target.dataItem.dataContext[\"id\"]\n        );\n        if (polygon) {\n          return polygon.visualLongitude;\n        }\n        return longitude;\n      });\n\n      let polygonTemplate = polygonSeries.mapPolygons.template;\n      polygonTemplate.tooltipText = \"{name}\";\n      polygonTemplate.fill = am4core.color(theme.palette.background.default);\n      polygonTemplate.stroke = am4core.color(theme.palette.background.paper);\n    }\n\n    !loading && !error && drawMap(mapState);\n  });\n\n  return (\n    <Grid item xs={12} md={6} lg={8}>\n      <Paper style={{ height: \"100%\", position: \"relative\" }}>\n        {loading && !error && <CircularProgress />}\n        <Box p={2}>\n          <div id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}></div>\n        </Box>\n        {!loading && !error && (\n          <>\n            <div\n              style={{\n                position: \"absolute\",\n                top: theme.spacing(2),\n                right: theme.spacing(2),\n                width: \"96%\",\n              }}\n            >\n              <Box display=\"flex\" justifyContent=\"space-between\">\n                <Box fontSize=\"h6.fontSize\">Worldwide Infections</Box>\n                <Box>\n                  <Chip\n                    size=\"small\"\n                    style={{ backgroundColor: theme.palette.info.main }}\n                    label=\"Cases\"\n                    onClick={() => setMapState(\"cases\")}\n                  />\n                  <Chip\n                    size=\"small\"\n                    style={{ backgroundColor: theme.palette.error.main }}\n                    label=\"Deaths\"\n                    onClick={() => setMapState(\"deaths\")}\n                  />\n                  <Chip\n                    size=\"small\"\n                    style={{ backgroundColor: theme.palette.warning.main }}\n                    label=\"Critical\"\n                    onClick={() => setMapState(\"critical\")}\n                  />\n                  <Chip\n                    size=\"small\"\n                    style={{ backgroundColor: theme.palette.success.main }}\n                    label=\"Recoveries\"\n                    onClick={() => setMapState(\"recovered\")}\n                  />\n                </Box>\n              </Box>\n            </div>\n          </>\n        )}\n      </Paper>\n    </Grid>\n  );\n}\n\nexport default WorldMapGraph;\n","import React from \"react\";\nimport { Grid, Paper, Switch, FormControlLabel, Box } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport CircularProgress from \"../CircularProgress/CircularProgress\";\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\n\nfunction InfectionsGraph({ timelineData }) {\n  const { data, loading, error } = timelineData;\n  const [logMap, setLogMap] = React.useState(false);\n  const theme = useTheme();\n\n  const handleChange = (event) => {\n    setLogMap(event.target.checked);\n  };\n\n  am4core.ready(function () {\n    let chart = am4core.create(\"lineChart\", am4charts.XYChart);\n\n    function createSeriesLine(chart, color, type) {\n      let name = type.charAt(0).toUpperCase() + type.slice(1);\n      let series = chart.series.push(new am4charts.LineSeries());\n      series.dataFields.valueY = type;\n      series.fill = am4core.color(color);\n      series.dataFields.dateX = \"date\";\n      series.strokeWidth = 2;\n      series.minBulletDistance = 10;\n      series.tooltipText = \"{valueY} \" + name;\n      series.tooltip.pointerOrientation = \"vertical\";\n\n      series.tooltip.background.cornerRadius = 20;\n      series.tooltip.background.fillOpacity = 0.5;\n\n      series.stroke = am4core.color(color);\n      series.legendSettings.labelText = name;\n      series.tooltip.autoTextColor = false;\n      series.tooltip.label.fill = am4core.color(\"#282e38\");\n      return chart;\n    }\n\n    function drawMap(chartType) {\n      chart.numberFormatter.numberFormat = \"#a\";\n      chart.numberFormatter.bigNumberPrefixes = [\n        { number: 1e3, suffix: \"K\" },\n        { number: 1e6, suffix: \"M\" },\n        { number: 1e9, suffix: \"B\" },\n      ];\n      // Create axes\n      let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n      dateAxis.renderer.minGridDistance = 50;\n\n      let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n      valueAxis.logarithmic = chartType;\n      valueAxis.renderer.labels.template.fill = am4core.color(\"#adb5bd\");\n      dateAxis.renderer.labels.template.fill = am4core.color(\"#adb5bd\");\n\n      createSeriesLine(chart, theme.palette.info.main, \"cases\");\n      createSeriesLine(chart, theme.palette.success.main, \"recoveries\");\n      createSeriesLine(chart, theme.palette.error.main, \"deaths\");\n\n      chart.data = data;\n\n      chart.legend = new am4charts.Legend();\n      chart.legend.labels.template.fill = am4core.color(\"#adb5bd\");\n\n      chart.cursor = new am4charts.XYCursor();\n    }\n\n    !loading && !error && drawMap(logMap);\n  });\n\n  return (\n    <Grid item xs={12} md={6} lg={8}>\n      <Paper style={{ height: \"100%\", position: \"relative\" }}>\n        {loading && !error && <CircularProgress />}\n        <Box p={2}>\n          <div id=\"lineChart\" style={{ width: \"100%\", height: \"500px\" }}></div>\n        </Box>\n        {!loading && !error && (\n          <div\n            style={{\n              position: \"absolute\",\n              top: theme.spacing(2),\n              right: theme.spacing(2),\n              width: \"96%\",\n            }}\n          >\n            <Box display=\"flex\" justifyContent=\"space-between\">\n              <Box fontSize=\"h6.fontSize\">Infections History</Box>\n              <Box>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={logMap}\n                      onChange={handleChange}\n                      color=\"primary\"\n                      inputProps={{\n                        \"aria-label\": \"checkbox with default color\",\n                      }}\n                    />\n                  }\n                  label=\"Logarithmic\"\n                />\n              </Box>\n            </Box>\n          </div>\n        )}\n      </Paper>\n    </Grid>\n  );\n}\n\nexport default InfectionsGraph;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Grid,\n  Paper,\n  Box,\n  Chip,\n  Switch,\n  FormGroup,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport CircularProgress from \"../CircularProgress/CircularProgress\";\n\nam4core.useTheme(am4themes_animated);\n\nfunction RateGraph({ summaryData }) {\n  const { data, loading, error } = summaryData;\n\n  am4core.ready(function () {\n    let chart = am4core.create(\"radarChart\", am4charts.RadarChart);\n\n    function drawMap(chartType) {\n      chart.data = [\n        {\n          category: \"Critical\",\n          value: (data.critical / data.active) * 100,\n          full: 100,\n        },\n        {\n          category: \"Death\",\n          value: (data.deaths / (data.cases - data.active)) * 100,\n          full: 100,\n        },\n        {\n          category: \"Recovered\",\n          value: (data.recovered / (data.cases - data.active)) * 100,\n          full: 100,\n        },\n        {\n          category: \"Active\",\n          value: 100 - (data.critical / data.active) * 100,\n          full: 100,\n        },\n      ];\n      // Make chart not full circle\n      chart.startAngle = -90;\n      chart.endAngle = 180;\n      chart.innerRadius = am4core.percent(20);\n\n      // Set number format\n      chart.numberFormatter.numberFormat = \"#.#'%'\";\n\n      // Create axes\n      let categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n      categoryAxis.dataFields.category = \"category\";\n      categoryAxis.renderer.grid.template.location = 0;\n      categoryAxis.renderer.grid.template.strokeOpacity = 0;\n      categoryAxis.renderer.labels.template.horizontalCenter = \"right\";\n      categoryAxis.renderer.labels.template.adapter.add(\"fill\", function (\n        fill,\n        target\n      ) {\n        if (target.dataItem.index == 0) {\n          return am4core.color(\"#f9c851\");\n        }\n        if (target.dataItem.index == 1) {\n          return am4core.color(\"#ff5b5b\");\n        }\n        if (target.dataItem.index == 2) {\n          return am4core.color(\"#10c469\");\n        }\n        return am4core.color(\"#21AFDD\");\n      });\n      categoryAxis.renderer.minGridDistance = 10;\n\n      let valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n      valueAxis.renderer.grid.template.strokeOpacity = 0;\n      valueAxis.min = 0;\n      valueAxis.max = 100;\n      valueAxis.strictMinMax = true;\n\n      valueAxis.renderer.labels.template.fill = am4core.color(\"#adb5bd\");\n\n      // Create series\n      let series1 = chart.series.push(new am4charts.RadarColumnSeries());\n      series1.dataFields.valueX = \"full\";\n      series1.dataFields.categoryY = \"category\";\n      series1.clustered = false;\n      series1.columns.template.fill = new am4core.InterfaceColorSet().getFor(\n        \"alternativeBackground\"\n      );\n      series1.columns.template.fillOpacity = 0.08;\n      series1.columns.template[\"cornerRadiusTopLeft\"] = 20;\n      series1.columns.template.strokeWidth = 0;\n      series1.columns.template.radarColumn.cornerRadius = 20;\n\n      let series2 = chart.series.push(new am4charts.RadarColumnSeries());\n      series2.dataFields.valueX = \"value\";\n      series2.dataFields.categoryY = \"category\";\n      series2.clustered = false;\n      series2.columns.template.strokeWidth = 0;\n      series2.columns.template.tooltipText = \"{category}: [bold]{value}[/]\";\n      series2.columns.template.radarColumn.cornerRadius = 20;\n\n      series2.columns.template.adapter.add(\"fill\", function (fill, target) {\n        //return chart.colors.getIndex(target.dataItem.index);\n        if (target.dataItem.index == 0) {\n          return am4core.color(\"#f9c851\");\n        }\n        if (target.dataItem.index == 1) {\n          return am4core.color(\"#ff5b5b\");\n        }\n        if (target.dataItem.index == 2) {\n          return am4core.color(\"#10c469\");\n        }\n        return am4core.color(\"#21AFDD\");\n      });\n\n      chart.cursor = new am4charts.RadarCursor();\n      chart.cursor.fill = am4core.color(\"#282e38\");\n      chart.tooltip.label.fill = am4core.color(\"#282e38\");\n    }\n\n    !loading && !error && drawMap();\n  });\n\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <Paper style={{ height: \"100%\", position: \"relative\" }}>\n        {!loading && !error && (\n          <Box fontSize=\"h6.fontSize\" padding={2}>\n            Rate Distribution\n          </Box>\n        )}\n        {loading && !error && <CircularProgress />}\n        <Box p={2}>\n          <div id=\"radarChart\" style={{ width: \"100%\", height: \"450px\" }}></div>\n        </Box>\n      </Paper>\n    </Grid>\n  );\n}\n\nexport default RateGraph;\n","import React from \"react\";\nimport { Grid, Paper, Box } from \"@material-ui/core\";\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport CircularProgress from \"../CircularProgress/CircularProgress\";\n\nam4core.useTheme(am4themes_animated);\n\nfunction DistributionGraph({ countryData, type }) {\n  const { data, loading, error } = countryData;\n\n  function calculateSum(index, array = data) {\n    var total = 0;\n    for (var i = 0, _len = array.length; i < _len; i++) {\n      total += array[i][index];\n    }\n    return total;\n  }\n\n  am4core.ready(function () {\n    let chart = am4core.create(\"pieChart\", am4charts.PieChart);\n    let pieSeries = chart.series.push(new am4charts.PieSeries());\n\n    function drawMap() {\n      if (type === \"global\") {\n        chart.data = data.slice(0, 10);\n        let otherCases = data.slice(10, data.length);\n        chart.data.push({\n          country: \"Other\",\n          cases: calculateSum(\"cases\", otherCases),\n        });\n        pieSeries.dataFields.value = \"cases\";\n        pieSeries.dataFields.category = \"country\";\n      } else if (type === \"country\") {\n        chart.data.push({\n          type: \"Recoveries\",\n          number: data.recovered,\n          color: am4core.color(\"#10c469\"),\n        });\n        chart.data.push({\n          type: \"Deaths\",\n          number: data.deaths,\n          color: am4core.color(\"#ff5b5b\"),\n        });\n        chart.data.push({\n          type: \"Critical\",\n          number: data.critical,\n          color: am4core.color(\"#f9c851\"),\n        });\n        pieSeries.dataFields.value = \"number\";\n        pieSeries.dataFields.category = \"type\";\n      }\n\n      pieSeries.labels.template.disabled = true;\n      pieSeries.ticks.template.disabled = true;\n      pieSeries.slices.template.stroke = am4core.color(\"#313a46\");\n      pieSeries.slices.template.strokeWidth = 1;\n      pieSeries.slices.template.strokeOpacity = 1;\n    }\n\n    !loading && !error && drawMap();\n  });\n\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <Paper style={{ height: \"100%\", position: \"relative\" }}>\n        {loading && !error && <CircularProgress />}\n        {!loading && !error && (\n          <Box fontSize=\"h6.fontSize\" padding={2}>\n            Infections Distribution\n          </Box>\n        )}\n        <Box p={2}>\n          <div id=\"pieChart\" style={{ width: \"100%\", height: \"300px\" }}></div>\n        </Box>\n      </Paper>\n    </Grid>\n  );\n}\n\nexport default DistributionGraph;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, Divider, Typography, Box } from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  divider: {\n    marginBottom: theme.spacing(2),\n    height: theme.spacing(1),\n  },\n  info: { backgroundColor: theme.palette.info.main },\n  success: { backgroundColor: theme.palette.success.main },\n  warning: { backgroundColor: theme.palette.warning.main },\n  error: { backgroundColor: theme.palette.error.main },\n}));\n\nexport default function InfectionRateBox({\n  title,\n  count,\n  totalCount,\n  type,\n  color,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Paper style={{ backgroundColor: \"#17223b\" }}>\n      <Box padding={2}>\n        <Typography>\n          <Box textAlign=\"center\" fontSize=\"h4.fontSize\" m={1} color={color}>\n            {count}\n          </Box>\n        </Typography>\n        <Box fontSize=\"h6.fontSize\" textAlign=\"center\" m={1}>\n          {title}\n        </Box>\n        <Divider\n          className={clsx(\n            classes.divider,\n            type === \"info\" && classes.info,\n            type === \"success\" && classes.success,\n            type === \"warning\" && classes.warning,\n            type === \"error\" && classes.error\n          )}\n          color=\"info\"\n        />\n      </Box>\n    </Paper>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Paper, Box } from \"@material-ui/core\";\nimport InfectionRateBox from \"../InfectionRateBox/InfectionRateBox\";\nimport CircularProgress from \"../CircularProgress/CircularProgress\";\n// import theme from \"@amcharts/amcharts4/themes/animated\";\n\n// const useStyles = makeStyles((theme) => ({}));\n\nexport default function InfectionRatesBlock({ summaryData }) {\n  const { data, loading, error } = summaryData;\n\n  return (\n    <Grid container item xs={12} lg={5}>\n      <Paper style={{ width: \"100%\", padding: 16 }}>\n        {loading && !error && <CircularProgress />}\n        {!loading && !error && (\n          <>\n            <Box fontSize=\"h6.fontSize\" paddingBottom={2}>\n              Infection Rates\n            </Box>\n            <Grid container spacing={3}>\n              <Grid item xs={6}>\n                <InfectionRateBox\n                  title=\"Nations Affected\"\n                  count={999}\n                  type=\"info\"\n                  color=\"info.main\"\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <InfectionRateBox\n                  title=\"Death Rate\"\n                  count={\n                    data &&\n                    ((data.deaths / (data.cases - data.active)) * 100).toFixed(\n                      2\n                    ) + \"%\"\n                  }\n                  type=\"error\"\n                  color=\"error.main\"\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <InfectionRateBox\n                  title=\"Recovery Rate\"\n                  count={\n                    data &&\n                    (\n                      (data.recovered / (data.cases - data.active)) *\n                      100\n                    ).toFixed(2) + \"%\"\n                  }\n                  type=\"success\"\n                  color=\"success.main\"\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <InfectionRateBox\n                  title=\"Critical Rate\"\n                  count={\n                    data &&\n                    ((data.critical / data.active) * 100).toFixed(2) + \"%\"\n                  }\n                  type=\"warning\"\n                  color=\"warning.main\"\n                />\n              </Grid>\n            </Grid>\n          </>\n        )}\n      </Paper>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Timer from \"react-compound-timer\";\nimport { Paper, Typography, Box, Table, TableRow } from \"@material-ui/core\";\nimport MuiTableCell from \"@material-ui/core/TableCell\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paperRoot: { width: \"100%\", marginBottom: theme.spacing(2) },\n}));\n\nconst TableCell = withStyles((theme) => ({\n  root: {\n    borderBottom: \"none\",\n    padding: theme.spacing(1),\n  },\n}))(MuiTableCell);\n\nfunction Counter() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paperRoot}>\n      <Box padding={2}>\n        <Typography>\n          <Box textAlign=\"center\" fontSize=\"h4.fontSize\" m={1}>\n            Outbreak Started\n          </Box>\n        </Typography>\n\n        <Timer initialTime={11131200000} direction=\"forward\">\n          {() => (\n            <React.Fragment>\n              <Typography>\n                <Box textAlign=\"center\" fontSize=\"h4.fontSize\" m={1}>\n                  <Table align=\"center\">\n                    <TableRow>\n                      <TableCell align=\"center\">\n                        <Timer.Days />\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        <Timer.Hours />\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        <Timer.Minutes />\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        <Timer.Seconds />\n                      </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell align=\"center\">Days</TableCell>\n                      <TableCell align=\"center\">Hours</TableCell>\n                      <TableCell align=\"center\">Minutes</TableCell>\n                      <TableCell align=\"center\">Seconds</TableCell>\n                    </TableRow>\n                  </Table>\n                </Box>\n              </Typography>\n            </React.Fragment>\n          )}\n        </Timer>\n      </Box>\n    </Paper>\n  );\n}\n\nexport default Counter;\n","import React from \"react\";\nimport { Paper, Typography, Box } from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  grid: { marginTop: theme.spacing(2) },\n  box: { padding: 20 },\n  paperRoot: { width: \"100%\" },\n}));\n\nfunction Counter() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paperRoot}>\n      <Box className={classes.box}>\n        <Typography>\n          <Box textAlign=\"center\" fontSize=\"h4.fontSize\" m={1}>\n            Created by Alican Torun\n          </Box>\n        </Typography>\n      </Box>\n    </Paper>\n  );\n}\n\nexport default Counter;\n","import React, { useEffect } from \"react\";\n\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Creators as GlobalStatisticsCreators } from \"../../store/ducks/globalStatistics\";\n\nimport { Container, Grid } from \"@material-ui/core\";\nimport CountryList from \"../../components/CountryList/CountryList\";\nimport SummaryBlock from \"../../components/SummaryBlock/SummaryBlock\";\nimport WorldMapGraph from \"../../components/WorldMapGraph/WorldMapGraph\";\nimport InfectionsGraph from \"../../components/InfectionsGraph/InfectionsGraph\";\nimport RateGraph from \"../../components/RateGraph/RateGraph\";\nimport DistributionGraph from \"../../components/DistributionGraph/DistributionGraph\";\nimport InfectionRatesBlock from \"../../components/InfectionRatesBlock/InfectionRatesBlock\";\nimport Counter from \"../../components/Counter/Counter\";\nimport Creator from \"../../components/Creator/Creator\";\n\nfunction AppDashboard(props) {\n  const {\n    getGlobalSummaryStatistics,\n    getGlobalCountryStatistics,\n    getGlobalTimelineStatistics,\n    globalStatistics,\n  } = props;\n\n  const { summaryData, timelineData, countryData } = globalStatistics;\n\n  useEffect(() => {\n    getGlobalSummaryStatistics();\n    getGlobalCountryStatistics();\n    getGlobalTimelineStatistics();\n  }, []);\n\n  return (\n    <div>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          //   className={classes.root}\n          spacing={2}\n        >\n          <SummaryBlock summaryData={summaryData} />\n          <CountryList countryData={countryData} />\n          <WorldMapGraph countryData={countryData} />\n          <RateGraph summaryData={summaryData} />\n          <InfectionsGraph timelineData={timelineData} />\n          <DistributionGraph type=\"global\" countryData={countryData} />\n          <InfectionRatesBlock summaryData={summaryData} />\n          <Grid\n            container\n            item\n            xs={12}\n            lg={3}\n            // spacing={2}\n\n            //   className={classes.root}\n            // spacing={2}\n          >\n            <Counter />\n            <Creator />\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(GlobalStatisticsCreators, dispatch);\n\nconst mapStateToProps = (state) => ({\n  globalStatistics: state.globalStatistics,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppDashboard);\n","export const Types = {\n  GET_COUNTRY_SUMMARY_STATISTICS_REQUEST:\n    \"subject/GET_COUNTRY_SUMMARY_STATISTICS_REQUEST\",\n  GET_COUNTRY_SUMMARY_STATISTICS_SUCCESS:\n    \"subject/GET_COUNTRY_SUMMARY_STATISTICS_SUCCESS\",\n  GET_COUNTRY_SUMMARY_STATISTICS_ERROR:\n    \"subject/GET_COUNTRY_SUMMARY_STATISTICS_ERROR\",\n\n  GET_COUNTRY_TIMELINE_STATISTICS_REQUEST:\n    \"subject/GET_COUNTRY_TIMELINE_STATISTICS_REQUEST\",\n  GET_COUNTRY_TIMELINE_STATISTICS_SUCCESS:\n    \"subject/GET_COUNTRY_TIMELINE_STATISTICS_SUCCESS\",\n  GET_COUNTRY_TIMELINE_STATISTICS_ERROR:\n    \"subject/GET_COUNTRY_TIMELINE_STATISTICS_ERROR\",\n};\n\nconst INITIAL_STATE = {\n  summaryData: { data: null, loading: true, error: false },\n  timelineData: { data: null, loading: true, error: false },\n};\n\nexport const Creators = {\n  getCountrySummaryStatistics: (country) => ({\n    type: Types.GET_COUNTRY_SUMMARY_STATISTICS_REQUEST,\n    country,\n  }),\n\n  getCountrySummaryStatisticsSuccess: (data) => ({\n    type: Types.GET_COUNTRY_SUMMARY_STATISTICS_SUCCESS,\n    payload: { data },\n  }),\n\n  getCountrySummaryStatisticsFailure: () => ({\n    type: Types.GET_COUNTRY_SUMMARY_STATISTICS_ERROR,\n  }),\n\n  getCountryTimelineStatistics: (country) => ({\n    type: Types.GET_COUNTRY_TIMELINE_STATISTICS_REQUEST,\n    country,\n  }),\n\n  getCountryTimelineStatisticsSuccess: (data) => ({\n    type: Types.GET_COUNTRY_TIMELINE_STATISTICS_SUCCESS,\n    payload: { data },\n  }),\n\n  getCountryTimelineStatisticsFailure: () => ({\n    type: Types.GET_COUNTRY_TIMELINE_STATISTICS_ERROR,\n  }),\n};\n\nconst subject = (state = INITIAL_STATE, { type, payload }) => {\n  switch (type) {\n    case Types.GET_COUNTRY_SUMMARY_STATISTICS_REQUEST:\n      return {\n        ...INITIAL_STATE,\n      };\n\n    case Types.GET_COUNTRY_SUMMARY_STATISTICS_SUCCESS:\n      return {\n        ...state,\n        summaryData: { data: payload.data, loading: false, error: false },\n      };\n\n    case Types.GET_COUNTRY_SUMMARY_STATISTICS_ERROR:\n      return {\n        ...state,\n        summaryData: { ...state.summaryData.data, loading: false, error: true },\n      };\n\n    case Types.GET_COUNTRY_TIMELINE_STATISTICS_REQUEST:\n      return {\n        ...INITIAL_STATE,\n      };\n\n    case Types.GET_COUNTRY_TIMELINE_STATISTICS_SUCCESS:\n      return {\n        ...state,\n        timelineData: {\n          data: payload.data,\n          loading: false,\n          error: false,\n        },\n      };\n\n    case Types.GET_COUNTRY_TIMELINE_STATISTICS_ERROR:\n      return {\n        ...state,\n        timelineData: {\n          ...state.timelineData.data,\n          loading: false,\n          error: true,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default subject;\n","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Creators as CountryStatisticsCreators } from \"../../store/ducks/countryStatistics\";\nimport { Container, Grid } from \"@material-ui/core\";\n\nimport RateGraph from \"../../components/RateGraph/RateGraph\";\nimport SummaryBlock from \"../../components/SummaryBlock/SummaryBlock\";\nimport InfectionsGraph from \"../../components/InfectionsGraph/InfectionsGraph\";\nimport InfectionRatesBlock from \"../../components/InfectionRatesBlock/InfectionRatesBlock\";\nimport DistributionGraph from \"../../components/DistributionGraph/DistributionGraph\";\nimport Counter from \"../../components/Counter/Counter\";\nimport Creator from \"../../components/Creator/Creator\";\n\nfunction CountryDashboard(props) {\n  let { country } = useParams();\n\n  const {\n    getCountrySummaryStatistics,\n    getCountryTimelineStatistics,\n    countryStatistics,\n  } = props;\n\n  const { summaryData, timelineData } = countryStatistics;\n\n  useEffect(() => {\n    getCountrySummaryStatistics(country);\n    if (country === \"USA\") {\n      getCountryTimelineStatistics(\"us\");\n    }\n  }, []);\n\n  return (\n    <div>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          //   className={classes.root}\n          spacing={2}\n        >\n          <SummaryBlock summaryData={summaryData} />\n          <RateGraph summaryData={summaryData} />\n          <InfectionsGraph timelineData={timelineData} />\n          <InfectionRatesBlock summaryData={summaryData} />\n\n          <DistributionGraph type=\"country\" countryData={summaryData} />\n\n          <Grid\n            container\n            item\n            xs={12}\n            lg={3}\n            // spacing={2}\n\n            //   className={classes.root}\n            // spacing={2}\n          >\n            <Counter />\n            <Creator />\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(CountryStatisticsCreators, dispatch);\n\nconst mapStateToProps = (state) => ({\n  countryStatistics: state.countryStatistics,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountryDashboard);\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n  palette: {\n    background: {\n      default: \"#000\",\n    },\n    primary: {\n      light: \"#757ce8\",\n      main: \"#3f50b5\",\n      dark: \"#fff\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#ff7961\",\n      main: \"#f44336\",\n      dark: \"#ba000d\",\n      contrastText: \"#000\",\n    },\n  },\n  overrides: {\n    MuiDivider: {\n      root: {\n        height: 2,\n      },\n    },\n  },\n});\ntheme = responsiveFontSizes(theme);\nexport default theme;\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n  palette: {\n    background: {\n      default: \"#17223b\",\n      paper: \"#263859\",\n    },\n    type: \"dark\",\n    primary: {\n      light: \"#757ce8\",\n      main: \"#3f50b5\",\n      dark: \"#fff\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#ff7961\",\n      main: \"#f44336\",\n      dark: \"#ba000d\",\n      contrastText: \"#000\",\n    },\n  },\n  overrides: {\n    MuiDivider: {\n      root: {\n        height: 2,\n      },\n    },\n  },\n});\ntheme = responsiveFontSizes(theme);\nexport default theme;\n\n/*\nPalette\n17223b\n263859\n6b778d\nff6768\n*/\n","// @flow\n\nimport React, { Component, createContext } from \"react\";\n\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\n\nimport lightTheme from \"./App/theme/lightTheme\";\nimport darkTheme from \"./App/theme/darkTheme\";\n\nconst { Provider, Consumer } = createContext();\n\nclass ThemeContextProvider extends Component<Props, State> {\n  state = {\n    isDarkThemeActivated: null,\n  };\n\n  async componentDidMount() {\n    this.setState({\n      isDarkThemeActivated: true,\n    });\n  }\n\n  onToggleDarkTheme = async (): void => {\n    const { isDarkThemeActivated } = this.state;\n\n    this.setState({\n      isDarkThemeActivated: !isDarkThemeActivated,\n    });\n  };\n\n  getIsDarkThemeActivated = () => {\n    const { isDarkThemeActivated } = this.state;\n\n    return isDarkThemeActivated;\n  };\n\n  getAppTheme = () => {\n    const { isDarkThemeActivated } = this.state;\n\n    const themeSelected = isDarkThemeActivated ? darkTheme : lightTheme;\n\n    return themeSelected;\n  };\n\n  render() {\n    const { isDarkThemeActivated } = this.state;\n    const { children } = this.props;\n\n    if (typeof isDarkThemeActivated !== \"boolean\") {\n      return null;\n    }\n\n    const appTheme = this.getAppTheme();\n\n    return (\n      <Provider\n        value={{\n          onToggleDarkTheme: this.onToggleDarkTheme,\n          isDarkThemeActivated,\n        }}\n      >\n        <MuiThemeProvider theme={appTheme}>{children}</MuiThemeProvider>\n      </Provider>\n    );\n  }\n}\n\nexport { ThemeContextProvider };\n\nexport default Consumer;\n","import React, { useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Typography, Switch } from \"@material-ui/core\";\nimport ThemeContextProvider from \"../../../ThemeContextProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(2),\n  },\n  appbar: {\n    alignItems: \"center\",\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const { onToggleDarkTheme } = useContext(ThemeContextProvider);\n  const [theme, setTheme] = useState(true);\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appbar} color=\"inherit\" position=\"static\">\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            color=\"inherit\"\n            className={classes.typography}\n          >\n            CORONA WATCH\n          </Typography>\n          <Switch\n            checked={theme}\n            onChange={() => {\n              onToggleDarkTheme();\n              setTheme(!theme);\n            }}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"checkbox with default color\" }}\n          />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\r\n\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport { history } from \"./_helpers/history\";\r\n\r\nimport AppDashboard from \"./screens/AppDashboard/AppDashboard\";\r\nimport CountryDashboard from \"./screens/CountryDashboard/CountryDashboard\";\r\nimport Header from \"../App/components/Header/Header\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router history={history}>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <AppDashboard />} />\r\n          <Route exact path=\"/:country\" render={() => <CountryDashboard />} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\n\nimport globalStatistics from \"./globalStatistics\";\nimport countryStatistics from \"./countryStatistics\";\n\nexport default combineReducers({\n  globalStatistics,\n  countryStatistics,\n});\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: process.env.NODE_ENV === \"production\" ? \"/api\" : \"/\",\n});\n\nexport default api;\n","export function compare(a, b) {\n  // Use toUpperCase() to ignore character casing\n  const countryA = a.cases;\n  const countryB = b.cases;\n\n  let comparison = 0;\n  if (countryA > countryB) {\n    comparison = -1;\n  } else if (countryA < countryB) {\n    comparison = 1;\n  }\n  return comparison;\n}\n","import { call, select, delay, put } from \"redux-saga/effects\";\nimport api from \"../../../API\";\nimport { Creators as GlobalStatisticsCreators } from \"../ducks/globalStatistics\";\nimport { compare } from \"../../utils/compare\";\nimport countryCodes from \"../../utils/countryCodes.json\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport function* getGlobalSummaryStatistics() {\n  try {\n    const { data } = yield call(api.get, \"/all\");\n\n    yield put(GlobalStatisticsCreators.getGlobalSummaryStatisticsSuccess(data));\n  } catch (err) {\n    yield put(GlobalStatisticsCreators.getGlobalSummaryStatisticsFailure());\n  }\n}\n\nexport function* getGlobalCountryStatistics() {\n  try {\n    let modifiedData = [];\n    const { data } = yield call(api.get, \"/countries\");\n\n    data.sort(compare);\n\n    data.forEach((element) => {\n      modifiedData.push({\n        id: countryCodes[element.country],\n        country: element.country,\n        cases: element.cases,\n        todayCases: element.todayCases,\n        deaths: element.deaths,\n        todayDeaths: element.todayDeaths,\n        recovered: element.recovered,\n        active: element.active,\n        critical: element.critical,\n        casesPerOneMillion: element.casesPerOneMillion,\n        deathsPerOneMillion: element.deathsPerOneMillion,\n        name: element.country,\n      });\n    });\n\n    yield put(\n      GlobalStatisticsCreators.getGlobalCountryStatisticsSuccess(modifiedData)\n    );\n  } catch (err) {\n    yield put(GlobalStatisticsCreators.getGlobalCountryStatisticsFailure());\n  }\n}\n\nexport function* getGlobalTimelineStatistics() {\n  try {\n    let modifiedData = [];\n\n    const { data } = yield call(api.get, \"/timeline/global\");\n\n    Object.keys(data).forEach((key) => {\n      modifiedData.push({\n        date: new Date(key),\n        cases: data[key].cases,\n        recoveries: data[key].recovered,\n        deaths: data[key].deaths,\n      });\n    });\n\n    yield put(\n      GlobalStatisticsCreators.getGlobalTimelineStatisticsSuccess(modifiedData)\n    );\n  } catch (err) {\n    yield put(GlobalStatisticsCreators.getGlobalTimelineStatisticsFailure());\n  }\n}\n","import { call, select, delay, put } from \"redux-saga/effects\";\nimport api from \"../../../API\";\nimport { Creators as CountryStatisticsCeators } from \"../ducks/countryStatistics\";\nimport { compare } from \"../../utils/compare\";\nimport countryCodes from \"../../utils/countryCodes.json\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport function* getCountrySummaryStatistics({ country }) {\n  try {\n    const { data } = yield call(api.get, `/countries/${country}`);\n\n    yield put(\n      CountryStatisticsCeators.getCountrySummaryStatisticsSuccess(data)\n    );\n  } catch (err) {\n    yield put(CountryStatisticsCeators.getCountrySummaryStatisticsFailure());\n  }\n}\n\nexport function* getCountryTimelineStatistics({ country }) {\n  try {\n    let modifiedData = [];\n\n    const { data } = yield call(api.get, `/timeline/${country}`);\n    const timeline = data.data.timeline;\n\n    timeline.forEach((key) => {\n      modifiedData.push({\n        date: new Date(key.date),\n        cases: key.cases,\n        recoveries: key.recovered,\n        deaths: key.deaths,\n      });\n    });\n\n    yield put(\n      CountryStatisticsCeators.getCountryTimelineStatisticsSuccess(modifiedData)\n    );\n  } catch (err) {\n    yield put(CountryStatisticsCeators.getCountryTimelineStatisticsFailure());\n  }\n}\n","import { all, takeLatest } from \"redux-saga/effects\";\n\nimport { Types as GlobalStatisticsTypes } from \"../ducks/globalStatistics\";\nimport { Types as CountryStatisticsTypes } from \"../ducks/countryStatistics\";\n\nimport {\n  getGlobalSummaryStatistics,\n  getGlobalCountryStatistics,\n  getGlobalTimelineStatistics,\n} from \"./globalStatistics\";\n\nimport {\n  getCountrySummaryStatistics,\n  getCountryTimelineStatistics,\n} from \"./countryStatistics\";\n\nexport default function* rootSaga() {\n  return yield all([\n    takeLatest(\n      GlobalStatisticsTypes.GET_GLOBAL_SUMMARY_STATISTICS_REQUEST,\n      getGlobalSummaryStatistics\n    ),\n    takeLatest(\n      GlobalStatisticsTypes.GET_GLOBAL_COUNTRY_STATISTICS_REQUEST,\n      getGlobalCountryStatistics\n    ),\n    takeLatest(\n      GlobalStatisticsTypes.GET_GLOBAL_TIMELINE_STATISTICS_REQUEST,\n      getGlobalTimelineStatistics\n    ),\n    takeLatest(\n      CountryStatisticsTypes.GET_COUNTRY_SUMMARY_STATISTICS_REQUEST,\n      getCountrySummaryStatistics\n    ),\n    takeLatest(\n      CountryStatisticsTypes.GET_COUNTRY_TIMELINE_STATISTICS_REQUEST,\n      getCountryTimelineStatistics\n    ),\n  ]);\n}\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport reducers from \"./ducks\";\r\nimport sagas from \"./sagas\";\r\n\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n// mount it on the Store\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\n// then run the saga\r\nsagaMiddleware.run(sagas);\r\n\r\n// render the application\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App/App\";\r\nimport store from \"./App/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ThemeContextProvider } from \"./ThemeContextProvider\";\r\n\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ThemeContextProvider>\r\n      <BrowserRouter>\r\n        <CssBaseline />\r\n        <App />\r\n      </BrowserRouter>\r\n    </ThemeContextProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}