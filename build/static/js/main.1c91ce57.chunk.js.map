{"version":3,"sources":["App/_helpers/history.js","App/store/ducks/globalStatistics.js","App/components/CountrySort/CountrySort.jsx","App/components/CountrySearch/CountrySearch.jsx","App/components/VirtualizedTable/VirtualizedTable.jsx","App/utils/compare.js","App/components/LinearLoading/LinearLoading.jsx","App/components/CountryList/CountryList.jsx","App/components/SummaryBox/SummaryBox.jsx","App/components/SummaryBlock/SummaryBlock.jsx","App/components/WorldMapGraph/WorldMapGraph.jsx","App/components/InfectionsGraph/InfectionsGraph.jsx","App/components/RateGraph/RateGraph.jsx","App/components/DistributionGraph/DistributionGraph.jsx","App/components/InfectionRateBox/InfectionRateBox.jsx","App/components/InfectionRatesBlock/InfectionRatesBlock.jsx","App/components/Counter/Counter.jsx","App/components/Creator/Creator.jsx","App/screens/AppDashboard/AppDashboard.jsx","App/store/ducks/countryStatistics.js","App/screens/CountryDashboard/CountryDashboard.jsx","App/theme/lightTheme.js","App/theme/darkTheme.js","ThemeContextProvider.js","App/components/Header/Header.jsx","App/App.jsx","App/store/ducks/index.js","API/index.js","App/store/sagas/globalStatistics.js","App/store/sagas/countryStatistics.js","App/store/sagas/index.js","App/store/index.js","index.jsx"],"names":["history","createBrowserHistory","Types","INITIAL_STATE","summaryData","data","loading","error","timelineData","countryData","Creators","getGlobalSummaryStatistics","type","getGlobalSummaryStatisticsSuccess","payload","getGlobalSummaryStatisticsFailure","getGlobalCountryStatistics","getGlobalCountryStatisticsSuccess","getGlobalCountryStatisticsFailure","getGlobalTimelineStatistics","getGlobalTimelineStatisticsSuccess","getGlobalTimelineStatisticsFailure","subject","state","makeStyles","theme","MuiVirtualizedTable","getRowClassName","index","props","classes","onRowClick","clsx","tableRow","flexContainer","tableRowHover","cellRenderer","cellData","columnIndex","columns","rowHeight","TableCell","component","className","tableCell","noClick","variant","style","height","align","numeric","headerRenderer","label","headerHeight","this","tableProps","width","i","push","rowData","country","gridStyle","direction","table","rowClassName","map","dataKey","other","key","headerProps","React","PureComponent","defaultProps","withStyles","display","alignItems","boxSizing","flip","paddingRight","undefined","cursor","backgroundColor","palette","grey","flex","compare","a","b","countryA","cases","countryB","comparison","useStyles","root","SuspenseLoading","LinearProgress","disableShrink","color","CountryList","Grid","item","xs","md","lg","Paper","VirtualizedTable","rowCount","length","rowGetter","divider","marginBottom","spacing","info","main","success","warning","SummaryBox","title","count","totalCount","Box","padding","fontSize","m","textAlign","Divider","SummaryBlock","deaths","recovered","critical","am4core","am4themes_animated","WorldMapGraph","useState","mapState","setMapState","useTheme","chartMap","am4maps","geodata","am4geodata_worldLow","projection","Miller","polygonSeries","series","exclude","useGeodata","nonScalingStroke","strokeWidth","calculateVisualCenter","imageSeries","dataFields","value","imageTemplate","mapImages","template","nonScaling","circle","createChild","fillOpacity","tooltipText","fill","getColor","heatRules","target","property","min","max","dataField","adapter","add","latitude","polygon","getPolygonById","dataItem","dataContext","visualLatitude","longitude","visualLongitude","polygonTemplate","mapPolygons","background","default","stroke","paper","drawMap","position","id","top","right","Chip","onClick","InfectionsGraph","logMap","setLogMap","chart","am4charts","createSeriesLine","name","charAt","toUpperCase","slice","valueY","dateX","minBulletDistance","tooltip","pointerOrientation","cornerRadius","legendSettings","labelText","autoTextColor","chartType","numberFormatter","numberFormat","bigNumberPrefixes","number","suffix","dateAxis","xAxes","renderer","minGridDistance","valueAxis","yAxes","logarithmic","labels","legend","FormControlLabel","control","Switch","checked","onChange","event","inputProps","RateGraph","category","active","full","startAngle","endAngle","innerRadius","categoryAxis","grid","location","strokeOpacity","horizontalCenter","strictMinMax","series1","valueX","categoryY","clustered","getFor","radarColumn","series2","DistributionGraph","calculateSum","array","total","_len","pieSeries","otherCases","disabled","ticks","slices","InfectionRateBox","Typography","InfectionRatesBlock","container","toFixed","paperRoot","borderBottom","MuiTableCell","Counter","initialTime","Fragment","Table","TableRow","Days","Hours","Minutes","Seconds","marginTop","box","connect","globalStatistics","dispatch","bindActionCreators","GlobalStatisticsCreators","useEffect","Container","maxWidth","Creator","getCountrySummaryStatistics","getCountrySummaryStatisticsSuccess","getCountrySummaryStatisticsFailure","getCountryTimelineStatistics","getCountryTimelineStatisticsSuccess","getCountryTimelineStatisticsFailure","countryStatistics","CountryStatisticsCreators","useParams","createMuiTheme","primary","light","dark","contrastText","secondary","responsiveFontSizes","createContext","Provider","Consumer","ThemeContextProvider","isDarkThemeActivated","onToggleDarkTheme","setState","getIsDarkThemeActivated","getAppTheme","darkTheme","lightTheme","children","appTheme","Component","flexGrow","appbar","Header","useContext","setTheme","AppBar","Toolbar","typography","App","exact","path","render","combineReducers","api","axios","create","baseURL","process","REACT_APP_API_URL","call","get","put","modifiedData","sort","forEach","element","countryCodes","todayCases","todayDeaths","casesPerOneMillion","deathsPerOneMillion","Object","keys","date","Date","recoveries","CountryStatisticsCeators","timeline","rootSaga","all","takeLatest","GlobalStatisticsTypes","CountryStatisticsTypes","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","run","sagas","ReactDOM","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.1c91ce57.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","export const Types = {\n  GET_GLOBAL_SUMMARY_STATISTICS_REQUEST:\n    \"subject/GET_GLOBAL_SUMMARY_STATISTICS_REQUEST\",\n  GET_GLOBAL_SUMMARY_STATISTICS_SUCCESS:\n    \"subject/GET_GLOBAL_SUMMARY_STATISTICS_SUCCESS\",\n  GET_GLOBAL_SUMMARY_STATISTICS_ERROR:\n    \"subject/GET_GLOBAL_SUMMARY_STATISTICS_ERROR\",\n\n  GET_GLOBAL_COUNTRY_STATISTICS_REQUEST:\n    \"subject/GET_GLOBAL_COUNTRY_STATISTICS_REQUEST\",\n  GET_GLOBAL_COUNTRY_STATISTICS_SUCCESS:\n    \"subject/GET_GLOBAL_COUNTRY_STATISTICS_SUCCESS\",\n  GET_GLOBAL_COUNTRY_STATISTICS_ERROR:\n    \"subject/GET_GLOBAL_COUNTRY_STATISTICS_ERROR\",\n\n  GET_GLOBAL_TIMELINE_STATISTICS_REQUEST:\n    \"subject/GET_GLOBAL_TIMELINE_STATISTICS_REQUEST\",\n  GET_GLOBAL_TIMELINE_STATISTICS_SUCCESS:\n    \"subject/GET_GLOBAL_TIMELINE_STATISTICS_SUCCESS\",\n  GET_GLOBAL_TIMELINE_STATISTICS_ERROR:\n    \"subject/GET_GLOBAL_TIMELINE_STATISTICS_ERROR\",\n};\n\nconst INITIAL_STATE = {\n  summaryData: { data: null, loading: true, error: false },\n  timelineData: { data: null, loading: true, error: false },\n  countryData: { data: null, loading: true, error: false },\n};\n\nexport const Creators = {\n  getGlobalSummaryStatistics: () => ({\n    type: Types.GET_GLOBAL_SUMMARY_STATISTICS_REQUEST,\n  }),\n\n  getGlobalSummaryStatisticsSuccess: (data) => ({\n    type: Types.GET_GLOBAL_SUMMARY_STATISTICS_SUCCESS,\n    payload: { data },\n  }),\n\n  getGlobalSummaryStatisticsFailure: () => ({\n    type: Types.GET_GLOBAL_SUMMARY_STATISTICS_ERROR,\n  }),\n\n  getGlobalCountryStatistics: () => ({\n    type: Types.GET_GLOBAL_COUNTRY_STATISTICS_REQUEST,\n  }),\n\n  getGlobalCountryStatisticsSuccess: (data) => ({\n    type: Types.GET_GLOBAL_COUNTRY_STATISTICS_SUCCESS,\n    payload: { data },\n  }),\n\n  getGlobalCountryStatisticsFailure: () => ({\n    type: Types.GET_GLOBAL_COUNTRY_STATISTICS_ERROR,\n  }),\n\n  getGlobalTimelineStatistics: () => ({\n    type: Types.GET_GLOBAL_TIMELINE_STATISTICS_REQUEST,\n  }),\n\n  getGlobalTimelineStatisticsSuccess: (data) => ({\n    type: Types.GET_GLOBAL_TIMELINE_STATISTICS_SUCCESS,\n    payload: { data },\n  }),\n\n  getGlobalTimelineStatisticsFailure: () => ({\n    type: Types.GET_GLOBAL_TIMELINE_STATISTICS_ERROR,\n  }),\n};\n\nconst subject = (state = INITIAL_STATE, { type, payload }) => {\n  switch (type) {\n    case Types.GET_GLOBAL_SUMMARY_STATISTICS_REQUEST:\n      return {\n        ...INITIAL_STATE,\n      };\n\n    case Types.GET_GLOBAL_SUMMARY_STATISTICS_SUCCESS:\n      return {\n        ...state,\n        summaryData: { data: payload.data, loading: false, error: false },\n      };\n\n    case Types.GET_GLOBAL_SUMMARY_STATISTICS_ERROR:\n      return {\n        ...state,\n        summaryData: { ...state.summaryData.data, loading: false, error: true },\n      };\n\n    case Types.GET_GLOBAL_COUNTRY_STATISTICS_REQUEST:\n      return {\n        ...INITIAL_STATE,\n      };\n\n    case Types.GET_GLOBAL_COUNTRY_STATISTICS_SUCCESS:\n      return {\n        ...state,\n        countryData: { data: payload.data, loading: false, error: false },\n      };\n\n    case Types.GET_GLOBAL_COUNTRY_STATISTICS_ERROR:\n      return {\n        ...state,\n        countryData: { ...state.countryData.data, loading: false, error: true },\n      };\n\n    case Types.GET_GLOBAL_TIMELINE_STATISTICS_REQUEST:\n      return {\n        ...INITIAL_STATE,\n      };\n\n    case Types.GET_GLOBAL_TIMELINE_STATISTICS_SUCCESS:\n      return {\n        ...state,\n        timelineData: {\n          data: payload.data,\n          loading: false,\n          error: false,\n        },\n      };\n\n    case Types.GET_GLOBAL_TIMELINE_STATISTICS_ERROR:\n      return {\n        ...state,\n        timelineData: {\n          ...state.timelineData.data,\n          loading: false,\n          error: true,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default subject;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CountrySearch from \"../CountrySearch/CountrySearch\";\nimport CountrySort from \"../CountrySort/CountrySort\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function SummaryBlock({ stats }) {\n  const classes = useStyles();\n\n  return <></>;\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CountrySearch from \"../CountrySearch/CountrySearch\";\nimport CountrySort from \"../CountrySort/CountrySort\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function SummaryBlock({ stats }) {\n  const classes = useStyles();\n\n  return <></>;\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { AutoSizer, Column, Table } from \"react-virtualized\";\nimport { Link } from \"react-router-dom\";\nimport { history } from \"../../_helpers/history\";\n\nconst styles = (theme) => ({\n  flexContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    boxSizing: \"border-box\",\n  },\n  table: {\n    // temporary right-to-left patch, waiting for\n    // https://github.com/bvaughn/react-virtualized/issues/454\n    \"& .ReactVirtualized__Table__headerRow\": {\n      flip: false,\n      paddingRight: theme.direction === \"rtl\" ? \"0px !important\" : undefined,\n    },\n  },\n  tableRow: {\n    cursor: \"pointer\",\n  },\n  tableRowHover: {\n    \"&:hover\": {\n      backgroundColor: theme.palette.grey[200],\n    },\n  },\n  tableCell: {\n    flex: 1,\n  },\n  noClick: {\n    cursor: \"initial\",\n  },\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  static defaultProps = {\n    headerHeight: 48,\n    rowHeight: 48,\n  };\n\n  getRowClassName = ({ index }) => {\n    const { classes, onRowClick } = this.props;\n\n    return clsx(classes.tableRow, classes.flexContainer, {\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\n    });\n  };\n\n  cellRenderer = ({ cellData, columnIndex }) => {\n    const { columns, classes, rowHeight, onRowClick } = this.props;\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null,\n        })}\n        variant=\"body\"\n        style={{ height: rowHeight }}\n        align={\n          (columnIndex != null && columns[columnIndex].numeric) || false\n            ? \"right\"\n            : \"left\"\n        }\n      >\n        {cellData}\n      </TableCell>\n    );\n  };\n\n  headerRenderer = ({ label, columnIndex }) => {\n    const { headerHeight, columns, classes } = this.props;\n\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(\n          classes.tableCell,\n          classes.flexContainer,\n          classes.noClick\n        )}\n        variant=\"head\"\n        style={{ height: headerHeight }}\n        align={columns[columnIndex].numeric || false ? \"right\" : \"left\"}\n      >\n        <span>{label}</span>\n      </TableCell>\n    );\n  };\n\n  render() {\n    const {\n      classes,\n      columns,\n      rowHeight,\n      headerHeight,\n      ...tableProps\n    } = this.props;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            onRowClick={(i) => {\n              history.push(i.rowData.country);\n            }}\n            height={height}\n            width={width}\n            rowHeight={rowHeight}\n            gridStyle={{\n              direction: \"inherit\",\n            }}\n            headerHeight={headerHeight}\n            className={classes.table}\n            {...tableProps}\n            rowClassName={this.getRowClassName}\n          >\n            {columns.map(({ dataKey, ...other }, index) => {\n              return (\n                <Column\n                  key={dataKey}\n                  headerRenderer={(headerProps) =>\n                    this.headerRenderer({\n                      ...headerProps,\n                      columnIndex: index,\n                    })\n                  }\n                  className={classes.flexContainer}\n                  cellRenderer={this.cellRenderer}\n                  dataKey={dataKey}\n                  {...other}\n                />\n              );\n            })}\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nexport default withStyles(styles)(MuiVirtualizedTable);\n","export function compare(a, b) {\n  // Use toUpperCase() to ignore character casing\n  const countryA = a.cases;\n  const countryB = b.cases;\n\n  let comparison = 0;\n  if (countryA > countryB) {\n    comparison = -1;\n  } else if (countryA < countryB) {\n    comparison = 1;\n  }\n  return comparison;\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nexport default function SuspenseLoading() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress disableShrink color=\"secondary\" />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport CountrySearch from \"../CountrySearch/CountrySearch\";\nimport CountrySort from \"../CountrySort/CountrySort\";\nimport VirtualizedTable from \"../VirtualizedTable/VirtualizedTable\";\nimport { compare } from \"../../utils/compare\";\nimport LinearLoading from \"../LinearLoading/LinearLoading\";\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function CountryList({ countryData }) {\n  const { data, loading, error } = countryData;\n\n  return (\n    <>\n      <Grid item xs={12} md={6} lg={4}>\n        <Paper style={{ height: 500, width: \"100%\" }}>\n          {loading && !error && <LinearLoading />}\n          {!loading && !error && (\n            <VirtualizedTable\n              rowCount={data && data.length}\n              rowGetter={({ index }) => data && data[index]}\n              columns={[\n                {\n                  width: 200,\n                  label: \"Country\",\n                  dataKey: \"country\",\n                },\n                {\n                  width: 120,\n                  label: \"Cases\",\n                  dataKey: \"cases\",\n                  numeric: true,\n                },\n                {\n                  width: 120,\n                  label: \"Deaths\",\n                  dataKey: \"deaths\",\n                  numeric: true,\n                },\n                {\n                  width: 120,\n                  label: \"Todays Cases\",\n                  dataKey: \"todayCases\",\n                  numeric: true,\n                },\n                {\n                  width: 120,\n                  label: \"Todays Deaths\",\n                  dataKey: \"todayDeaths\",\n                  numeric: true,\n                },\n              ]}\n            />\n          )}\n        </Paper>\n        {/* <CountrySearch />\n        <CountrySort /> */}\n      </Grid>\n    </>\n  );\n}\n\n// const sample = [\n//   [\"Frozen yoghurt\", 159, 6.0, 24, 4.0],\n//   [\"Ice cream sandwich\", 237, 9.0, 37, 4.3],\n//   [\"Eclair\", 262, 16.0, 24, 6.0],\n//   [\"Cupcake\", 305, 3.7, 67, 4.3],\n//   [\"Gingerbread\", 356, 16.0, 49, 3.9],\n// ];\n\n// function createData(id, dessert, calories, fat, carbs, protein) {\n//   return { id, dessert, calories, fat, carbs, protein };\n// }\n\n// const rows = [];\n\n// for (let i = 0; i < 200; i += 1) {\n//   const randomSelection = sample[Math.floor(Math.random() * sample.length)];\n//   rows.push(createData(i, ...randomSelection));\n// }\n\n// export default function ReactVirtualizedTable() {\n//   return (\n//     <Paper style={{ height: 400, width: \"100%\" }}>\n//       <VirtualizedTable\n//         rowCount={rows.length}\n//         rowGetter={({ index }) => rows[index]}\n//         columns={[\n//           {\n//             width: 200,\n//             label: \"Dessert\",\n//             dataKey: \"dessert\",\n//           },\n//           {\n//             width: 120,\n//             label: \"Calories\\u00A0(g)\",\n//             dataKey: \"calories\",\n//             numeric: true,\n//           },\n//           {\n//             width: 120,\n//             label: \"Fat\\u00A0(g)\",\n//             dataKey: \"fat\",\n//             numeric: true,\n//           },\n//           {\n//             width: 120,\n//             label: \"Carbs\\u00A0(g)\",\n//             dataKey: \"carbs\",\n//             numeric: true,\n//           },\n//           {\n//             width: 120,\n//             label: \"Protein\\u00A0(g)\",\n//             dataKey: \"protein\",\n//             numeric: true,\n//           },\n//         ]}\n//       />\n//     </Paper>\n//   );\n// }\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, Divider, Typography, Box } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport LinearLoading from \"../LinearLoading/LinearLoading\";\n\nconst useStyles = makeStyles((theme) => ({\n  divider: {\n    marginBottom: theme.spacing(2),\n    height: theme.spacing(1),\n  },\n  info: { backgroundColor: theme.palette.info.main },\n  success: { backgroundColor: theme.palette.success.main },\n  warning: { backgroundColor: theme.palette.warning.main },\n  error: { backgroundColor: theme.palette.error.main },\n}));\n\nexport default function SummaryBox({\n  title,\n  count,\n  totalCount,\n  type,\n  loading,\n  error,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Paper>\n      <Box padding={2}>\n        {loading && !error && <LinearLoading />}\n        {/* {!loading && error && (\n          <Box\n            \n            fontSize=\"h6.fontSize\"\n            textAlign=\"center\"\n            m={1}\n          >\n            An error occured try later\n          </Box>\n        )} */}\n        {!loading && !error && (\n          <>\n            <Box fontSize=\"h6.fontSize\" m={1}>\n              {title}\n            </Box>\n            <Box fontSize=\"h6.fontSize\" textAlign=\"right\" m={1}>\n              {count}\n            </Box>\n            <Divider\n              className={clsx(\n                classes.divider,\n                type === \"info\" && classes.info,\n                type === \"success\" && classes.success,\n                type === \"warning\" && classes.warning,\n                type === \"error\" && classes.error\n              )}\n              color=\"info\"\n            />\n          </>\n        )}\n      </Box>\n    </Paper>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SummaryBox from \"../SummaryBox/SummaryBox\";\n\n// const useStyles = makeStyles((theme) => ({}));\n\nexport default function SummaryBlock({ summaryData }) {\n  const { data, loading, error } = summaryData;\n\n  return (\n    <>\n      <Grid item xs={12} md={6} lg={3}>\n        <SummaryBox\n          title=\"Infections\"\n          count={data && data.cases}\n          type=\"info\"\n          loading={loading}\n          error={error}\n          data={data}\n        />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <SummaryBox\n          title=\"Deaths\"\n          count={data && data.deaths}\n          loading={loading}\n          error={error}\n          data={data}\n          type=\"error\"\n        />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <SummaryBox\n          title=\"Recoveries\"\n          count={data && data.recovered}\n          type=\"success\"\n          loading={loading}\n          error={error}\n          data={data}\n        />\n      </Grid>\n      <Grid item xs={12} md={6} lg={3}>\n        <SummaryBox\n          title=\"Critical\"\n          count={data && data.critical}\n          type=\"warning\"\n          loading={loading}\n          error={error}\n          data={data}\n        />\n      </Grid>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Grid, Paper, Box, Chip } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nimport countryCodes from \"../../utils/countryCodes.json\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\n\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nimport LinearLoading from \"../LinearLoading/LinearLoading\";\n\nam4core.useTheme(am4themes_animated);\n\nfunction WorldMapGraph({ countryData }) {\n  const [mapState, setMapState] = useState(\"cases\");\n  const theme = useTheme();\n  const { data, loading, error } = countryData;\n\n  am4core.ready(function () {\n    let chartMap = am4core.create(\"chartdiv\", am4maps.MapChart);\n    chartMap.geodata = am4geodata_worldLow;\n    chartMap.projection = new am4maps.projections.Miller();\n\n    function getColor(mapState) {\n      switch (mapState) {\n        case \"cases\":\n          return theme.palette.info.main;\n          break;\n        case \"recovered\":\n          return theme.palette.success.main;\n          break;\n        case \"deaths\":\n          return theme.palette.error.main;\n          break;\n        case \"critical\":\n          return theme.palette.warning.main;\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    function drawMap(mapState) {\n      let polygonSeries = chartMap.series.push(new am4maps.MapPolygonSeries());\n      polygonSeries.exclude = [\"AQ\"];\n      polygonSeries.useGeodata = true;\n      polygonSeries.nonScalingStroke = true;\n      polygonSeries.strokeWidth = 0.5;\n      polygonSeries.calculateVisualCenter = true;\n\n      let imageSeries = chartMap.series.push(new am4maps.MapImageSeries());\n      imageSeries.data = data;\n      imageSeries.dataFields.value = mapState;\n\n      let imageTemplate = imageSeries.mapImages.template;\n      imageTemplate.nonScaling = true;\n\n      let circle = imageTemplate.createChild(am4core.Circle);\n      circle.fillOpacity = 0.7;\n\n      circle.tooltipText = \"{name}: [bold]{value}[/]\";\n      circle.fill = getColor(mapState);\n\n      imageSeries.heatRules.push({\n        target: circle,\n        property: \"radius\",\n        min: 4,\n        max: 30,\n        dataField: \"value\",\n      });\n\n      imageTemplate.adapter.add(\"latitude\", function (latitude, target) {\n        let polygon = polygonSeries.getPolygonById(\n          target.dataItem.dataContext[\"id\"]\n        );\n        if (polygon) {\n          return polygon.visualLatitude;\n        }\n        return latitude;\n      });\n\n      imageTemplate.adapter.add(\"longitude\", function (longitude, target) {\n        let polygon = polygonSeries.getPolygonById(\n          target.dataItem.dataContext[\"id\"]\n        );\n        if (polygon) {\n          return polygon.visualLongitude;\n        }\n        return longitude;\n      });\n\n      let polygonTemplate = polygonSeries.mapPolygons.template;\n      polygonTemplate.tooltipText = \"{name}\";\n      polygonTemplate.fill = am4core.color(theme.palette.background.default);\n      polygonTemplate.stroke = am4core.color(theme.palette.background.paper);\n    }\n\n    !loading && !error && drawMap(mapState);\n  });\n\n  return (\n    <Grid item xs={12} md={6} lg={8}>\n      <Paper style={{ position: \"relative\" }}>\n        {loading && !error && <LinearLoading />}\n        <div id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}></div>\n        <>\n          <div\n            style={{\n              position: \"absolute\",\n              top: theme.spacing(2),\n              right: theme.spacing(2),\n            }}\n          >\n            <Chip\n              style={{ backgroundColor: theme.palette.info.main }}\n              label=\"Cases\"\n              onClick={() => setMapState(\"cases\")}\n            />\n            <Chip\n              style={{ backgroundColor: theme.palette.error.main }}\n              label=\"Deaths\"\n              onClick={() => setMapState(\"deaths\")}\n            />\n            <Chip\n              style={{ backgroundColor: theme.palette.warning.main }}\n              label=\"Critical\"\n              onClick={() => setMapState(\"critical\")}\n            />\n            <Chip\n              style={{ backgroundColor: theme.palette.success.main }}\n              label=\"Recoveries\"\n              onClick={() => setMapState(\"recovered\")}\n            />\n          </div>\n        </>\n      </Paper>\n    </Grid>\n  );\n}\n\nexport default WorldMapGraph;\n","import React from \"react\";\nimport { Grid, Paper, Switch, FormControlLabel } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\n\nfunction InfectionsGraph({ timelineData }) {\n  const { data, loading, error } = timelineData;\n  const [logMap, setLogMap] = React.useState(false);\n  const theme = useTheme();\n\n  const handleChange = (event) => {\n    setLogMap(event.target.checked);\n  };\n\n  am4core.ready(function () {\n    let chart = am4core.create(\"lineChart\", am4charts.XYChart);\n\n    function createSeriesLine(chart, color, type) {\n      let name = type.charAt(0).toUpperCase() + type.slice(1);\n      let series = chart.series.push(new am4charts.LineSeries());\n      series.dataFields.valueY = type;\n      series.fill = am4core.color(color);\n      series.dataFields.dateX = \"date\";\n      series.strokeWidth = 2;\n      series.minBulletDistance = 10;\n      series.tooltipText = \"{valueY} \" + name;\n      series.tooltip.pointerOrientation = \"vertical\";\n\n      series.tooltip.background.cornerRadius = 20;\n      series.tooltip.background.fillOpacity = 0.5;\n\n      series.stroke = am4core.color(color);\n      series.legendSettings.labelText = name;\n      series.tooltip.autoTextColor = false;\n      series.tooltip.label.fill = am4core.color(\"#282e38\");\n      return chart;\n    }\n\n    function drawMap(chartType) {\n      chart.numberFormatter.numberFormat = \"#a\";\n      chart.numberFormatter.bigNumberPrefixes = [\n        { number: 1e3, suffix: \"K\" },\n        { number: 1e6, suffix: \"M\" },\n        { number: 1e9, suffix: \"B\" },\n      ];\n      // Create axes\n      let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n      dateAxis.renderer.minGridDistance = 50;\n\n      let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n      valueAxis.logarithmic = chartType;\n      valueAxis.renderer.labels.template.fill = am4core.color(\"#adb5bd\");\n      dateAxis.renderer.labels.template.fill = am4core.color(\"#adb5bd\");\n\n      createSeriesLine(chart, theme.palette.info.main, \"cases\");\n      createSeriesLine(chart, theme.palette.success.main, \"recoveries\");\n      createSeriesLine(chart, theme.palette.error.main, \"deaths\");\n\n      chart.data = data;\n\n      chart.legend = new am4charts.Legend();\n      chart.legend.labels.template.fill = am4core.color(\"#adb5bd\");\n\n      chart.cursor = new am4charts.XYCursor();\n    }\n\n    !loading && !error && drawMap(logMap);\n  });\n\n  return (\n    <Grid item xs={12} md={6} lg={8}>\n      <Paper style={{ position: \"relative\" }}>\n        <div id=\"lineChart\" style={{ width: \"100%\", height: \"500px\" }}></div>\n        <div\n          style={{\n            position: \"absolute\",\n            top: theme.spacing(2),\n            right: theme.spacing(2),\n          }}\n        >\n          <FormControlLabel\n            control={\n              <Switch\n                checked={logMap}\n                onChange={handleChange}\n                color=\"primary\"\n                inputProps={{ \"aria-label\": \"checkbox with default color\" }}\n              />\n            }\n            label=\"Logarithmic\"\n          />\n        </div>\n      </Paper>\n    </Grid>\n  );\n}\n\nexport default InfectionsGraph;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Grid,\n  Paper,\n  Box,\n  Chip,\n  Switch,\n  FormGroup,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport LinearLoading from \"../LinearLoading/LinearLoading\";\n\nam4core.useTheme(am4themes_animated);\n\nfunction RateGraph({ summaryData }) {\n  const { data, loading, error } = summaryData;\n\n  am4core.ready(function () {\n    let chart = am4core.create(\"radarChart\", am4charts.RadarChart);\n\n    function drawMap(chartType) {\n      chart.data = [\n        {\n          category: \"Critical\",\n          value: (data.critical / data.active) * 100,\n          full: 100,\n        },\n        {\n          category: \"Death\",\n          value: (data.deaths / (data.cases - data.active)) * 100,\n          full: 100,\n        },\n        {\n          category: \"Recovered\",\n          value: (data.recovered / (data.cases - data.active)) * 100,\n          full: 100,\n        },\n        {\n          category: \"Active\",\n          value: 100 - (data.critical / data.active) * 100,\n          full: 100,\n        },\n      ];\n      // Make chart not full circle\n      chart.startAngle = -90;\n      chart.endAngle = 180;\n      chart.innerRadius = am4core.percent(20);\n\n      // Set number format\n      chart.numberFormatter.numberFormat = \"#.#'%'\";\n\n      // Create axes\n      let categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n      categoryAxis.dataFields.category = \"category\";\n      categoryAxis.renderer.grid.template.location = 0;\n      categoryAxis.renderer.grid.template.strokeOpacity = 0;\n      categoryAxis.renderer.labels.template.horizontalCenter = \"right\";\n      categoryAxis.renderer.labels.template.adapter.add(\"fill\", function (\n        fill,\n        target\n      ) {\n        if (target.dataItem.index == 0) {\n          return am4core.color(\"#f9c851\");\n        }\n        if (target.dataItem.index == 1) {\n          return am4core.color(\"#ff5b5b\");\n        }\n        if (target.dataItem.index == 2) {\n          return am4core.color(\"#10c469\");\n        }\n        return am4core.color(\"#21AFDD\");\n      });\n      categoryAxis.renderer.minGridDistance = 10;\n\n      let valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n      valueAxis.renderer.grid.template.strokeOpacity = 0;\n      valueAxis.min = 0;\n      valueAxis.max = 100;\n      valueAxis.strictMinMax = true;\n\n      valueAxis.renderer.labels.template.fill = am4core.color(\"#adb5bd\");\n\n      // Create series\n      let series1 = chart.series.push(new am4charts.RadarColumnSeries());\n      series1.dataFields.valueX = \"full\";\n      series1.dataFields.categoryY = \"category\";\n      series1.clustered = false;\n      series1.columns.template.fill = new am4core.InterfaceColorSet().getFor(\n        \"alternativeBackground\"\n      );\n      series1.columns.template.fillOpacity = 0.08;\n      series1.columns.template[\"cornerRadiusTopLeft\"] = 20;\n      series1.columns.template.strokeWidth = 0;\n      series1.columns.template.radarColumn.cornerRadius = 20;\n\n      let series2 = chart.series.push(new am4charts.RadarColumnSeries());\n      series2.dataFields.valueX = \"value\";\n      series2.dataFields.categoryY = \"category\";\n      series2.clustered = false;\n      series2.columns.template.strokeWidth = 0;\n      series2.columns.template.tooltipText = \"{category}: [bold]{value}[/]\";\n      series2.columns.template.radarColumn.cornerRadius = 20;\n\n      series2.columns.template.adapter.add(\"fill\", function (fill, target) {\n        //return chart.colors.getIndex(target.dataItem.index);\n        if (target.dataItem.index == 0) {\n          return am4core.color(\"#f9c851\");\n        }\n        if (target.dataItem.index == 1) {\n          return am4core.color(\"#ff5b5b\");\n        }\n        if (target.dataItem.index == 2) {\n          return am4core.color(\"#10c469\");\n        }\n        return am4core.color(\"#21AFDD\");\n      });\n\n      chart.cursor = new am4charts.RadarCursor();\n      chart.cursor.fill = am4core.color(\"#282e38\");\n      chart.tooltip.label.fill = am4core.color(\"#282e38\");\n    }\n\n    !loading && !error && drawMap();\n  });\n\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <Paper style={{ position: \"relative\" }}>\n        {loading && !error && <LinearLoading />}\n        <div id=\"radarChart\" style={{ width: \"100%\", height: \"500px\" }}></div>\n      </Paper>\n    </Grid>\n  );\n}\n\nexport default RateGraph;\n","import React from \"react\";\nimport { Grid, Paper } from \"@material-ui/core\";\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport LinearLoading from \"../LinearLoading/LinearLoading\";\n\nam4core.useTheme(am4themes_animated);\n\nfunction DistributionGraph({ countryData, type }) {\n  const { data, loading, error } = countryData;\n\n  function calculateSum(index, array = data) {\n    var total = 0;\n    for (var i = 0, _len = array.length; i < _len; i++) {\n      total += array[i][index];\n    }\n    return total;\n  }\n\n  am4core.ready(function () {\n    let chart = am4core.create(\"pieChart\", am4charts.PieChart);\n    let pieSeries = chart.series.push(new am4charts.PieSeries());\n\n    function drawMap() {\n      if (type === \"global\") {\n        chart.data = data.slice(0, 10);\n        let otherCases = data.slice(10, data.length);\n        chart.data.push({\n          country: \"Other\",\n          cases: calculateSum(\"cases\", otherCases),\n        });\n        pieSeries.dataFields.value = \"cases\";\n        pieSeries.dataFields.category = \"country\";\n      } else if (type === \"country\") {\n        chart.data.push({\n          type: \"Recoveries\",\n          number: data.recovered,\n          color: am4core.color(\"#10c469\"),\n        });\n        chart.data.push({\n          type: \"Deaths\",\n          number: data.deaths,\n          color: am4core.color(\"#ff5b5b\"),\n        });\n        chart.data.push({\n          type: \"Critical\",\n          number: data.critical,\n          color: am4core.color(\"#f9c851\"),\n        });\n        pieSeries.dataFields.value = \"number\";\n        pieSeries.dataFields.category = \"type\";\n      }\n\n      pieSeries.labels.template.disabled = true;\n      pieSeries.ticks.template.disabled = true;\n      pieSeries.slices.template.stroke = am4core.color(\"#313a46\");\n      pieSeries.slices.template.strokeWidth = 1;\n      pieSeries.slices.template.strokeOpacity = 1;\n    }\n\n    !loading && !error && drawMap();\n  });\n\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <Paper style={{ position: \"relative\" }}>\n        {loading && !error && <LinearLoading />}\n\n        <div id=\"pieChart\" style={{ width: \"100%\", height: \"400px\" }}></div>\n      </Paper>\n    </Grid>\n  );\n}\n\nexport default DistributionGraph;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, Divider, Typography, Box } from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  divider: {\n    marginBottom: theme.spacing(2),\n    height: theme.spacing(1),\n  },\n  info: { backgroundColor: theme.palette.info.main },\n  success: { backgroundColor: theme.palette.success.main },\n  warning: { backgroundColor: theme.palette.warning.main },\n  error: { backgroundColor: theme.palette.error.main },\n}));\n\nexport default function InfectionRateBox({\n  title,\n  count,\n  totalCount,\n  type,\n  color,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Paper>\n      <Box padding={2}>\n        <Typography>\n          <Box textAlign=\"center\" fontSize=\"h4.fontSize\" m={1} color={color}>\n            {count}\n          </Box>\n        </Typography>\n        <Box fontSize=\"h6.fontSize\" textAlign=\"center\" m={1}>\n          {title}\n        </Box>\n        <Divider\n          className={clsx(\n            classes.divider,\n            type === \"info\" && classes.info,\n            type === \"success\" && classes.success,\n            type === \"warning\" && classes.warning,\n            type === \"error\" && classes.error\n          )}\n          color=\"info\"\n        />\n      </Box>\n    </Paper>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport InfectionRateBox from \"../InfectionRateBox/InfectionRateBox\";\nimport LinearLoading from \"../LinearLoading/LinearLoading\";\n\n// const useStyles = makeStyles((theme) => ({}));\n\nexport default function InfectionRatesBlock({ summaryData }) {\n  const { data, loading, error } = summaryData;\n\n  return (\n    <Grid container item xs={12} md={6} lg={4}>\n      <Paper>\n        {loading && !error && <LinearLoading />}\n        {!loading && !error && (\n          <Grid container spacing={3}>\n            <Grid item xs={6}>\n              <InfectionRateBox\n                title=\"Nations Affected\"\n                count={999}\n                type=\"info\"\n                color=\"info.main\"\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <InfectionRateBox\n                title=\"Death Rate\"\n                count={\n                  data &&\n                  ((data.deaths / (data.cases - data.active)) * 100).toFixed(\n                    2\n                  ) + \"%\"\n                }\n                type=\"error\"\n                color=\"error.main\"\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <InfectionRateBox\n                title=\"Recovery Rate\"\n                count={\n                  data &&\n                  ((data.recovered / (data.cases - data.active)) * 100).toFixed(\n                    2\n                  ) + \"%\"\n                }\n                type=\"success\"\n                color=\"success.main\"\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <InfectionRateBox\n                title=\"Critical Rate\"\n                count={\n                  data && ((data.critical / data.active) * 100).toFixed(2) + \"%\"\n                }\n                type=\"warning\"\n                color=\"warning.main\"\n              />\n            </Grid>\n          </Grid>\n        )}\n      </Paper>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Timer from \"react-compound-timer\";\nimport { Paper, Typography, Box, Table, TableRow } from \"@material-ui/core\";\nimport MuiTableCell from \"@material-ui/core/TableCell\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paperRoot: { width: \"100%\", marginBottom: theme.spacing(2) },\n}));\n\nconst TableCell = withStyles({\n  root: {\n    borderBottom: \"none\",\n  },\n})(MuiTableCell);\n\nfunction Counter() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paperRoot}>\n      <Box padding={2}>\n        <Typography>\n          <Box textAlign=\"center\" fontSize=\"h4.fontSize\" m={1}>\n            Outbreak Started\n          </Box>\n        </Typography>\n\n        <Timer initialTime={11131200000} direction=\"forward\">\n          {() => (\n            <React.Fragment>\n              <Typography>\n                <Box textAlign=\"center\" fontSize=\"h4.fontSize\" m={1}>\n                  <Table align=\"center\">\n                    <TableRow>\n                      <TableCell align=\"center\">\n                        <Timer.Days />\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        <Timer.Hours />\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        <Timer.Minutes />\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        <Timer.Seconds />\n                      </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell align=\"center\">Days</TableCell>\n                      <TableCell align=\"center\">Hours</TableCell>\n                      <TableCell align=\"center\">Minutes</TableCell>\n                      <TableCell align=\"center\">Seconds</TableCell>\n                    </TableRow>\n                  </Table>\n                </Box>\n              </Typography>\n            </React.Fragment>\n          )}\n        </Timer>\n      </Box>\n    </Paper>\n  );\n}\n\nexport default Counter;\n","import React from \"react\";\nimport { Paper, Typography, Box } from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  grid: { marginTop: theme.spacing(2) },\n  box: { padding: 50 },\n  paperRoot: { width: \"100%\" },\n}));\n\nfunction Counter() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paperRoot}>\n      <Box className={classes.box}>\n        <Typography>\n          <Box textAlign=\"center\" fontSize=\"h4.fontSize\" m={1}>\n            Created by Alican Torun\n          </Box>\n        </Typography>\n      </Box>\n    </Paper>\n  );\n}\n\nexport default Counter;\n","import React, { useEffect } from \"react\";\n\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Creators as GlobalStatisticsCreators } from \"../../store/ducks/globalStatistics\";\n\nimport { Container, Grid } from \"@material-ui/core\";\nimport CountryList from \"../../components/CountryList/CountryList\";\nimport SummaryBlock from \"../../components/SummaryBlock/SummaryBlock\";\nimport WorldMapGraph from \"../../components/WorldMapGraph/WorldMapGraph\";\nimport InfectionsGraph from \"../../components/InfectionsGraph/InfectionsGraph\";\nimport RateGraph from \"../../components/RateGraph/RateGraph\";\nimport DistributionGraph from \"../../components/DistributionGraph/DistributionGraph\";\nimport InfectionRatesBlock from \"../../components/InfectionRatesBlock/InfectionRatesBlock\";\nimport Counter from \"../../components/Counter/Counter\";\nimport Creator from \"../../components/Creator/Creator\";\n\nfunction AppDashboard(props) {\n  const {\n    getGlobalSummaryStatistics,\n    getGlobalCountryStatistics,\n    getGlobalTimelineStatistics,\n    globalStatistics,\n  } = props;\n\n  const { summaryData, timelineData, countryData } = globalStatistics;\n\n  useEffect(() => {\n    getGlobalSummaryStatistics();\n    getGlobalCountryStatistics();\n    getGlobalTimelineStatistics();\n  }, []);\n\n  return (\n    <div>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          //   className={classes.root}\n          spacing={2}\n        >\n          <SummaryBlock summaryData={summaryData} />\n          <CountryList countryData={countryData} />\n          <WorldMapGraph countryData={countryData} />\n          <RateGraph summaryData={summaryData} />\n          <InfectionsGraph timelineData={timelineData} />\n          <DistributionGraph type=\"global\" countryData={countryData} />\n          <InfectionRatesBlock summaryData={summaryData} />\n          <Grid\n            container\n            item\n            xs={12}\n            lg={4}\n            // spacing={2}\n\n            //   className={classes.root}\n            // spacing={2}\n          >\n            <Counter />\n            <Creator />\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(GlobalStatisticsCreators, dispatch);\n\nconst mapStateToProps = (state) => ({\n  globalStatistics: state.globalStatistics,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppDashboard);\n","export const Types = {\n  GET_COUNTRY_SUMMARY_STATISTICS_REQUEST:\n    \"subject/GET_COUNTRY_SUMMARY_STATISTICS_REQUEST\",\n  GET_COUNTRY_SUMMARY_STATISTICS_SUCCESS:\n    \"subject/GET_COUNTRY_SUMMARY_STATISTICS_SUCCESS\",\n  GET_COUNTRY_SUMMARY_STATISTICS_ERROR:\n    \"subject/GET_COUNTRY_SUMMARY_STATISTICS_ERROR\",\n\n  GET_COUNTRY_TIMELINE_STATISTICS_REQUEST:\n    \"subject/GET_COUNTRY_TIMELINE_STATISTICS_REQUEST\",\n  GET_COUNTRY_TIMELINE_STATISTICS_SUCCESS:\n    \"subject/GET_COUNTRY_TIMELINE_STATISTICS_SUCCESS\",\n  GET_COUNTRY_TIMELINE_STATISTICS_ERROR:\n    \"subject/GET_COUNTRY_TIMELINE_STATISTICS_ERROR\",\n};\n\nconst INITIAL_STATE = {\n  summaryData: { data: null, loading: true, error: false },\n  timelineData: { data: null, loading: true, error: false },\n};\n\nexport const Creators = {\n  getCountrySummaryStatistics: (country) => ({\n    type: Types.GET_COUNTRY_SUMMARY_STATISTICS_REQUEST,\n    country,\n  }),\n\n  getCountrySummaryStatisticsSuccess: (data) => ({\n    type: Types.GET_COUNTRY_SUMMARY_STATISTICS_SUCCESS,\n    payload: { data },\n  }),\n\n  getCountrySummaryStatisticsFailure: () => ({\n    type: Types.GET_COUNTRY_SUMMARY_STATISTICS_ERROR,\n  }),\n\n  getCountryTimelineStatistics: (country) => ({\n    type: Types.GET_COUNTRY_TIMELINE_STATISTICS_REQUEST,\n    country,\n  }),\n\n  getCountryTimelineStatisticsSuccess: (data) => ({\n    type: Types.GET_COUNTRY_TIMELINE_STATISTICS_SUCCESS,\n    payload: { data },\n  }),\n\n  getCountryTimelineStatisticsFailure: () => ({\n    type: Types.GET_COUNTRY_TIMELINE_STATISTICS_ERROR,\n  }),\n};\n\nconst subject = (state = INITIAL_STATE, { type, payload }) => {\n  switch (type) {\n    case Types.GET_COUNTRY_SUMMARY_STATISTICS_REQUEST:\n      return {\n        ...INITIAL_STATE,\n      };\n\n    case Types.GET_COUNTRY_SUMMARY_STATISTICS_SUCCESS:\n      return {\n        ...state,\n        summaryData: { data: payload.data, loading: false, error: false },\n      };\n\n    case Types.GET_COUNTRY_SUMMARY_STATISTICS_ERROR:\n      return {\n        ...state,\n        summaryData: { ...state.summaryData.data, loading: false, error: true },\n      };\n\n    case Types.GET_COUNTRY_TIMELINE_STATISTICS_REQUEST:\n      return {\n        ...INITIAL_STATE,\n      };\n\n    case Types.GET_COUNTRY_TIMELINE_STATISTICS_SUCCESS:\n      return {\n        ...state,\n        timelineData: {\n          data: payload.data,\n          loading: false,\n          error: false,\n        },\n      };\n\n    case Types.GET_COUNTRY_TIMELINE_STATISTICS_ERROR:\n      return {\n        ...state,\n        timelineData: {\n          ...state.timelineData.data,\n          loading: false,\n          error: true,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default subject;\n","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Creators as CountryStatisticsCreators } from \"../../store/ducks/countryStatistics\";\nimport { Container, Grid } from \"@material-ui/core\";\n\nimport RateGraph from \"../../components/RateGraph/RateGraph\";\nimport SummaryBlock from \"../../components/SummaryBlock/SummaryBlock\";\nimport InfectionsGraph from \"../../components/InfectionsGraph/InfectionsGraph\";\nimport InfectionRatesBlock from \"../../components/InfectionRatesBlock/InfectionRatesBlock\";\nimport DistributionGraph from \"../../components/DistributionGraph/DistributionGraph\";\nimport Counter from \"../../components/Counter/Counter\";\nimport Creator from \"../../components/Creator/Creator\";\n\nfunction CountryDashboard(props) {\n  let { country } = useParams();\n\n  const {\n    getCountrySummaryStatistics,\n    getCountryTimelineStatistics,\n    countryStatistics,\n  } = props;\n\n  const { summaryData, timelineData } = countryStatistics;\n\n  useEffect(() => {\n    getCountrySummaryStatistics(country);\n    if (country === \"USA\") {\n      getCountryTimelineStatistics(\"us\");\n    }\n  }, []);\n\n  return (\n    <div>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          //   className={classes.root}\n          spacing={2}\n        >\n          <SummaryBlock summaryData={summaryData} />\n          <RateGraph summaryData={summaryData} />\n          <InfectionsGraph timelineData={timelineData} />\n          <InfectionRatesBlock summaryData={summaryData} />\n\n          <DistributionGraph type=\"country\" countryData={summaryData} />\n\n          <Grid\n            container\n            item\n            xs={12}\n            lg={4}\n            // spacing={2}\n\n            //   className={classes.root}\n            // spacing={2}\n          >\n            <Counter />\n            <Creator />\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(CountryStatisticsCreators, dispatch);\n\nconst mapStateToProps = (state) => ({\n  countryStatistics: state.countryStatistics,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountryDashboard);\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n  palette: {\n    background: {\n      default: \"#000\",\n    },\n    primary: {\n      light: \"#757ce8\",\n      main: \"#3f50b5\",\n      dark: \"#fff\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#ff7961\",\n      main: \"#f44336\",\n      dark: \"#ba000d\",\n      contrastText: \"#000\",\n    },\n  },\n});\ntheme = responsiveFontSizes(theme);\nexport default theme;\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n  palette: {\n    background: {\n      default: \"#17223b\",\n      paper: \"#263859\",\n    },\n    type: \"dark\",\n    primary: {\n      light: \"#757ce8\",\n      main: \"#3f50b5\",\n      dark: \"#fff\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#ff7961\",\n      main: \"#f44336\",\n      dark: \"#ba000d\",\n      contrastText: \"#000\",\n    },\n  },\n});\ntheme = responsiveFontSizes(theme);\nexport default theme;\n\n/*\nPalette\n17223b\n263859\n6b778d\nff6768\n*/\n","// @flow\n\nimport React, { Component, createContext } from \"react\";\n\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\n\nimport lightTheme from \"./App/theme/lightTheme\";\nimport darkTheme from \"./App/theme/darkTheme\";\n\nconst { Provider, Consumer } = createContext();\n\nclass ThemeContextProvider extends Component<Props, State> {\n  state = {\n    isDarkThemeActivated: null,\n  };\n\n  async componentDidMount() {\n    this.setState({\n      isDarkThemeActivated: true,\n    });\n  }\n\n  onToggleDarkTheme = async (): void => {\n    const { isDarkThemeActivated } = this.state;\n\n    this.setState({\n      isDarkThemeActivated: !isDarkThemeActivated,\n    });\n  };\n\n  getIsDarkThemeActivated = () => {\n    const { isDarkThemeActivated } = this.state;\n\n    return isDarkThemeActivated;\n  };\n\n  getAppTheme = () => {\n    const { isDarkThemeActivated } = this.state;\n\n    const themeSelected = isDarkThemeActivated ? darkTheme : lightTheme;\n\n    return themeSelected;\n  };\n\n  render() {\n    const { isDarkThemeActivated } = this.state;\n    const { children } = this.props;\n\n    if (typeof isDarkThemeActivated !== \"boolean\") {\n      return null;\n    }\n\n    const appTheme = this.getAppTheme();\n\n    return (\n      <Provider\n        value={{\n          onToggleDarkTheme: this.onToggleDarkTheme,\n          isDarkThemeActivated,\n        }}\n      >\n        <MuiThemeProvider theme={appTheme}>{children}</MuiThemeProvider>\n      </Provider>\n    );\n  }\n}\n\nexport { ThemeContextProvider };\n\nexport default Consumer;\n","import React, { useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Typography, Switch } from \"@material-ui/core\";\nimport ThemeContextProvider from \"../../../ThemeContextProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(2),\n  },\n  appbar: {\n    alignItems: \"center\",\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const { onToggleDarkTheme } = useContext(ThemeContextProvider);\n  const [theme, setTheme] = useState(true);\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appbar} color=\"inherit\" position=\"static\">\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            color=\"inherit\"\n            className={classes.typography}\n          >\n            CORONA WATCH\n          </Typography>\n          <Switch\n            checked={theme}\n            onChange={() => {\n              onToggleDarkTheme();\n              setTheme(!theme);\n            }}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"checkbox with default color\" }}\n          />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\r\n\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport { history } from \"./_helpers/history\";\r\n\r\nimport AppDashboard from \"./screens/AppDashboard/AppDashboard\";\r\nimport CountryDashboard from \"./screens/CountryDashboard/CountryDashboard\";\r\nimport Header from \"../App/components/Header/Header\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router history={history}>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <AppDashboard />} />\r\n          <Route exact path=\"/:country\" render={() => <CountryDashboard />} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\n\nimport globalStatistics from \"./globalStatistics\";\nimport countryStatistics from \"./countryStatistics\";\n\nexport default combineReducers({\n  globalStatistics,\n  countryStatistics,\n});\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n});\n\nexport default api;\n","import { call, select, delay, put } from \"redux-saga/effects\";\nimport api from \"../../../API\";\nimport { Creators as GlobalStatisticsCreators } from \"../ducks/globalStatistics\";\nimport { compare } from \"../../utils/compare\";\nimport countryCodes from \"../../utils/countryCodes.json\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport function* getGlobalSummaryStatistics() {\n  try {\n    const { data } = yield call(api.get, \"/all\");\n\n    yield put(GlobalStatisticsCreators.getGlobalSummaryStatisticsSuccess(data));\n  } catch (err) {\n    yield put(GlobalStatisticsCreators.getGlobalSummaryStatisticsFailure());\n  }\n}\n\nexport function* getGlobalCountryStatistics() {\n  try {\n    let modifiedData = [];\n    const { data } = yield call(api.get, \"/countries\");\n\n    data.sort(compare);\n\n    data.forEach((element) => {\n      modifiedData.push({\n        id: countryCodes[element.country],\n        country: element.country,\n        cases: element.cases,\n        todayCases: element.todayCases,\n        deaths: element.deaths,\n        todayDeaths: element.todayDeaths,\n        recovered: element.recovered,\n        active: element.active,\n        critical: element.critical,\n        casesPerOneMillion: element.casesPerOneMillion,\n        deathsPerOneMillion: element.deathsPerOneMillion,\n        name: element.country,\n      });\n    });\n\n    yield put(\n      GlobalStatisticsCreators.getGlobalCountryStatisticsSuccess(modifiedData)\n    );\n  } catch (err) {\n    yield put(GlobalStatisticsCreators.getGlobalCountryStatisticsFailure());\n  }\n}\n\nexport function* getGlobalTimelineStatistics() {\n  try {\n    let modifiedData = [];\n\n    const { data } = yield call(api.get, \"/timeline/global\");\n\n    Object.keys(data).forEach((key) => {\n      modifiedData.push({\n        date: new Date(key),\n        cases: data[key].cases,\n        recoveries: data[key].recovered,\n        deaths: data[key].deaths,\n      });\n    });\n\n    yield put(\n      GlobalStatisticsCreators.getGlobalTimelineStatisticsSuccess(modifiedData)\n    );\n  } catch (err) {\n    yield put(GlobalStatisticsCreators.getGlobalTimelineStatisticsFailure());\n  }\n}\n","import { call, select, delay, put } from \"redux-saga/effects\";\nimport api from \"../../../API\";\nimport { Creators as CountryStatisticsCeators } from \"../ducks/countryStatistics\";\nimport { compare } from \"../../utils/compare\";\nimport countryCodes from \"../../utils/countryCodes.json\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport function* getCountrySummaryStatistics({ country }) {\n  try {\n    const { data } = yield call(api.get, `/countries/${country}`);\n\n    yield put(\n      CountryStatisticsCeators.getCountrySummaryStatisticsSuccess(data)\n    );\n  } catch (err) {\n    yield put(CountryStatisticsCeators.getCountrySummaryStatisticsFailure());\n  }\n}\n\nexport function* getCountryTimelineStatistics({ country }) {\n  try {\n    let modifiedData = [];\n\n    const { data } = yield call(api.get, `/timeline/${country}`);\n    const timeline = data.data.timeline;\n\n    timeline.forEach((key) => {\n      modifiedData.push({\n        date: new Date(key.date),\n        cases: key.cases,\n        recoveries: key.recovered,\n        deaths: key.deaths,\n      });\n    });\n\n    yield put(\n      CountryStatisticsCeators.getCountryTimelineStatisticsSuccess(modifiedData)\n    );\n  } catch (err) {\n    yield put(CountryStatisticsCeators.getCountryTimelineStatisticsFailure());\n  }\n}\n","import { all, takeLatest } from \"redux-saga/effects\";\n\nimport { Types as GlobalStatisticsTypes } from \"../ducks/globalStatistics\";\nimport { Types as CountryStatisticsTypes } from \"../ducks/countryStatistics\";\n\nimport {\n  getGlobalSummaryStatistics,\n  getGlobalCountryStatistics,\n  getGlobalTimelineStatistics,\n} from \"./globalStatistics\";\n\nimport {\n  getCountrySummaryStatistics,\n  getCountryTimelineStatistics,\n} from \"./countryStatistics\";\n\nexport default function* rootSaga() {\n  return yield all([\n    takeLatest(\n      GlobalStatisticsTypes.GET_GLOBAL_SUMMARY_STATISTICS_REQUEST,\n      getGlobalSummaryStatistics\n    ),\n    takeLatest(\n      GlobalStatisticsTypes.GET_GLOBAL_COUNTRY_STATISTICS_REQUEST,\n      getGlobalCountryStatistics\n    ),\n    takeLatest(\n      GlobalStatisticsTypes.GET_GLOBAL_TIMELINE_STATISTICS_REQUEST,\n      getGlobalTimelineStatistics\n    ),\n    takeLatest(\n      CountryStatisticsTypes.GET_COUNTRY_SUMMARY_STATISTICS_REQUEST,\n      getCountrySummaryStatistics\n    ),\n    takeLatest(\n      CountryStatisticsTypes.GET_COUNTRY_TIMELINE_STATISTICS_REQUEST,\n      getCountryTimelineStatistics\n    ),\n  ]);\n}\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport reducers from \"./ducks\";\r\nimport sagas from \"./sagas\";\r\n\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n// mount it on the Store\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\n// then run the saga\r\nsagaMiddleware.run(sagas);\r\n\r\n// render the application\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App/App\";\r\nimport store from \"./App/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ThemeContextProvider } from \"./ThemeContextProvider\";\r\n\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ThemeContextProvider>\r\n      <BrowserRouter>\r\n        <CssBaseline />\r\n        <App />\r\n      </BrowserRouter>\r\n    </ThemeContextProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}